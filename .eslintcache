[{"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\index.js":"1","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\store.js":"2","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\App.js":"4","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\reducers\\profileReducer.js":"5","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\reducers\\orderReducers.js":"6","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\reducers\\productReducers.js":"7","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\reducers\\cartReducers.js":"8","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\reducers\\userReducers.js":"9","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\Footer.js":"10","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\Header.js":"11","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\ProfileScreen.js":"12","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\ShippingScreen.js":"13","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\PlanScreen.js":"14","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\CartScreen.js":"15","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\LoginScreen.js":"16","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\PaymentScreen.js":"17","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\ProductListScreen.js":"18","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\ExclusiveScreen.js":"19","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\UserEditScreen.js":"20","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\OrderScreen.js":"21","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\RegisterScreen.js":"22","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\test.js":"23","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\UserListScreen.js":"24","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\CreatePostScreen.js":"25","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\Messages.js":"26","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\PlaceOrderScreen.js":"27","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\Stalk.js":"28","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\HeartListEdit.js":"29","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\ProfilesScreen.js":"30","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\MessageScreen.js":"31","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\HeartList.js":"32","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\CreatePostListScreen.js":"33","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\OrderListScreen.js":"34","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\ProfilesListScreen.js":"35","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\ProductEditScreen.js":"36","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\Message.js":"37","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\SearchBox.js":"38","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\Loader.js":"39","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\FormContainer.js":"40","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\Product.js":"41","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\CheckoutSteps.js":"42","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\Paginate.js":"43","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\Profiles.js":"44","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\ProfilesCarousel.js":"45","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\constants\\profileConstants.js":"46","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\constants\\userConstants.js":"47","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\constants\\orderConstants.js":"48","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\constants\\cartConstants.js":"49","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\constants\\productConstants.js":"50","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\actions\\userActions.js":"51","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\actions\\productActions.js":"52","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\actions\\orderActions.js":"53","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\actions\\cartActions.js":"54","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\actions\\profileActions.js":"55","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\Rating.js":"56","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\ProfileStalk.js":"57","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\ProfilesMessages.js":"58","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\ProductCarousel.js":"59"},{"size":628,"mtime":1681919624479,"results":"60","hashOfConfig":"61"},{"size":3371,"mtime":1682051284883,"results":"62","hashOfConfig":"61"},{"size":362,"mtime":1616789579000,"results":"63","hashOfConfig":"61"},{"size":3514,"mtime":1682126915139,"results":"64","hashOfConfig":"61"},{"size":5499,"mtime":1682051256414,"results":"65","hashOfConfig":"61"},{"size":4079,"mtime":1616789579000,"results":"66","hashOfConfig":"61"},{"size":4080,"mtime":1680537176453,"results":"67","hashOfConfig":"61"},{"size":923,"mtime":1680413277746,"results":"68","hashOfConfig":"61"},{"size":3926,"mtime":1616789579000,"results":"69","hashOfConfig":"61"},{"size":437,"mtime":1682068553796,"results":"70","hashOfConfig":"61"},{"size":7663,"mtime":1682142641401,"results":"71","hashOfConfig":"61"},{"size":7472,"mtime":1681923074485,"results":"72","hashOfConfig":"61"},{"size":6112,"mtime":1680874137702,"results":"73","hashOfConfig":"61"},{"size":1613,"mtime":1681611253770,"results":"74","hashOfConfig":"61"},{"size":3379,"mtime":1682126206056,"results":"75","hashOfConfig":"61"},{"size":2559,"mtime":1681617564805,"results":"76","hashOfConfig":"61"},{"size":1705,"mtime":1616789579000,"results":"77","hashOfConfig":"61"},{"size":5035,"mtime":1681546005251,"results":"78","hashOfConfig":"61"},{"size":7076,"mtime":1682126314166,"results":"79","hashOfConfig":"61"},{"size":3912,"mtime":1616789579000,"results":"80","hashOfConfig":"61"},{"size":5504,"mtime":1682154440593,"results":"81","hashOfConfig":"61"},{"size":3930,"mtime":1681923032750,"results":"82","hashOfConfig":"61"},{"size":110,"mtime":1681536273741,"results":"83","hashOfConfig":"61"},{"size":3511,"mtime":1616789579000,"results":"84","hashOfConfig":"61"},{"size":8473,"mtime":1682367562996,"results":"85","hashOfConfig":"61"},{"size":4290,"mtime":1682367576882,"results":"86","hashOfConfig":"61"},{"size":3695,"mtime":1682126364232,"results":"87","hashOfConfig":"61"},{"size":6303,"mtime":1682125130557,"results":"88","hashOfConfig":"61"},{"size":3508,"mtime":1682055202174,"results":"89","hashOfConfig":"61"},{"size":6499,"mtime":1682130473785,"results":"90","hashOfConfig":"61"},{"size":12356,"mtime":1682367580830,"results":"91","hashOfConfig":"61"},{"size":7813,"mtime":1682367570630,"results":"92","hashOfConfig":"61"},{"size":6810,"mtime":1682132048652,"results":"93","hashOfConfig":"61"},{"size":3590,"mtime":1681617619296,"results":"94","hashOfConfig":"61"},{"size":2134,"mtime":1682522094687,"results":"95","hashOfConfig":"61"},{"size":5961,"mtime":1682367590661,"results":"96","hashOfConfig":"61"},{"size":228,"mtime":1681553346125,"results":"97","hashOfConfig":"61"},{"size":1041,"mtime":1680595265196,"results":"98","hashOfConfig":"61"},{"size":458,"mtime":1616789579000,"results":"99","hashOfConfig":"61"},{"size":378,"mtime":1616789579000,"results":"100","hashOfConfig":"61"},{"size":1291,"mtime":1681611228379,"results":"101","hashOfConfig":"61"},{"size":1577,"mtime":1680874207817,"results":"102","hashOfConfig":"61"},{"size":856,"mtime":1680776012990,"results":"103","hashOfConfig":"61"},{"size":4155,"mtime":1682522556051,"results":"104","hashOfConfig":"61"},{"size":1463,"mtime":1681920851419,"results":"105","hashOfConfig":"61"},{"size":2367,"mtime":1682051212134,"results":"106","hashOfConfig":"61"},{"size":1479,"mtime":1616789579000,"results":"107","hashOfConfig":"61"},{"size":1416,"mtime":1680766548574,"results":"108","hashOfConfig":"61"},{"size":287,"mtime":1616789579000,"results":"109","hashOfConfig":"61"},{"size":1502,"mtime":1616789579000,"results":"110","hashOfConfig":"61"},{"size":7615,"mtime":1682367545411,"results":"111","hashOfConfig":"61"},{"size":6179,"mtime":1682367530038,"results":"112","hashOfConfig":"61"},{"size":7295,"mtime":1682367495410,"results":"113","hashOfConfig":"61"},{"size":1367,"mtime":1682521849881,"results":"114","hashOfConfig":"61"},{"size":11287,"mtime":1682367537537,"results":"115","hashOfConfig":"61"},{"size":1886,"mtime":1616789579000,"results":"116","hashOfConfig":"61"},{"size":919,"mtime":1682072117404,"results":"117","hashOfConfig":"61"},{"size":5839,"mtime":1682084525342,"results":"118","hashOfConfig":"61"},{"size":1419,"mtime":1680263360933,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"6nq7rt",{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"122"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"122"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"122"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"122"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"122"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"122"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"122"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"122"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"122"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":52,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"122"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"122"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"122"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"122"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"122"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":60,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"122"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"122"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"122"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"122"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"122"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"122"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"122"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"237","usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"122"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"122"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"122"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"122"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"122"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"122"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\index.js",[],["272","273"],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\store.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\App.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\reducers\\profileReducer.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\Header.js",["274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport SearchBox from './SearchBox';\nimport { logout } from '../actions/userActions';\nimport { FaHome, FaGamepad, FaShoppingCart, FaUser, FaHeart } from 'react-icons/fa';\nimport { GiSwordsEmblem } from 'react-icons/gi';\nimport { SiTwitch } from 'react-icons/si';\nimport Avatar from '../assets/1.png';\n\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FaFileInvoice } from 'react-icons/fa';\nimport { listProductDetails, createProductReview } from '../actions/productActions';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\nimport { FaComments } from 'react-icons/fa';\nimport { Helmet } from \"react-helmet\";\n\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\nimport { deleteOrder } from '../actions/orderActions';\nimport { ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL } from '../constants/orderConstants';\n\n\nfunction Header({ match}) {\n  \n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const orderListMy = useSelector(state => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n  const logoutHandler = () => {\n    dispatch(logout());\n\n    \n  };\n\n\n\n\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const history = useHistory();\n\n    useEffect(() => {\n      if (!userInfo) {\n        history.push('/login')\n      } else {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        dispatch(listMyOrders())\n      }\n    }, [dispatch, history, userInfo])\n    \n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n  \n\n  return (\n    <header>\n       {/* <Helmet>\n        <title>POPSICCLE</title>\n        <link rel=\"icon\" type=\"image/png\" href=\"https://imgur.com/XDaKYpK.png\" sizes=\"16x16\" />\n      </Helmet> */}\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed-top>\n        <Container>\n          <LinkContainer to=\"/\">\n          <Navbar.Brand>\n  <img src={Avatar} className=\"d-inline-block align-top\" alt=\"Amoretto Logo\" style={{ width: '60px', height: '60px' }} />\n\n</Navbar.Brand>\n\n            \n          </LinkContainer>\n          \n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n          \n            <Nav className=\"me-auto\">\n          \n            <Nav.Link style={{ fontFamily: 'Segoe Script' }}>\n  Amoretto\n</Nav.Link>\n\n            \n              <LinkContainer to=\"/\">\n                <Nav.Link>\n        \n                  Look for Dates\n                </Nav.Link>\n              </LinkContainer>\n\n\n\n\n              <Col>\n  <ListGroup>\n    {loadingOrders ? (\n      <Loader /> \n    ) : errorOrders ? ( \n      <Message variant='danger'>{errorOrders}</Message> \n    ) : ( \n      orders.map(order => (\n        <div key={order.id}>\n          <div>\n            {order.isBought && order.isPaid ? (\n            <LinkContainer to=\"#\">\n            <Nav.Link disabled style={{ color: 'green !important' }}>\n              <strong>Exclusive</strong>\n            </Nav.Link>\n          </LinkContainer>\n          \n            ) : (\n              order.isBought === null ? null : (\n                <LinkContainer to=\"/plan\">\n                  <Nav.Link>\n                    Be Exclusive\n                  </Nav.Link>\n                </LinkContainer>\n              )\n            )}\n          </div>\n        </div>\n      ))\n    )}\n   \n  </ListGroup>\n</Col>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<NavDropdown title={<span></span>}> \n  <LinkContainer to=\"/heartlist\">\n    <NavDropdown.Item>\n    Hearts List\n    </NavDropdown.Item>\n  </LinkContainer>           \n\n  <LinkContainer to=\"/messages\">\n    <NavDropdown.Item>\n    Messages\n    </NavDropdown.Item>\n  </LinkContainer>           \n\n\n\n\n</NavDropdown>\n\n\n\n\n              \n            </Nav>\n\n\n            <Nav>\n\n      \n      {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>\n                      <FaUser className=\"me-2\" />Profile\n                    </NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/datelist\">\n                    <NavDropdown.Item>\n                    \n                      Create Post\n                    </NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/plan\">\n                    <NavDropdown.Item>\n                    \n                      Be Exlusive\n                    </NavDropdown.Item>\n                  </LinkContainer>\n\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <FaUser className=\"me-2\" />\n                    Login\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              \n{userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Amoretto Users</NavDropdown.Item>\n                                    </LinkContainer>\n                                    \n                                    <LinkContainer to='/admin/datelist'>\n                                        <NavDropdown.Item>Amoretto Profiles</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/planlist'>\n                                        <NavDropdown.Item>Add Exlusives</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/exclusivelist'>\n                                        <NavDropdown.Item>Exclusive User List</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n}\n\nexport default Header;\n\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\ProfileScreen.js",["310","311"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\nimport { deleteOrder } from '../actions/orderActions';\nimport { ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL } from '../constants/orderConstants';\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n\n    const deleteOrderHandler = (id) => {\n        if (window.confirm('Are you sure?')) {\n          dispatch({ type: ORDER_DELETE_REQUEST });\n    \n          dispatch(deleteOrder(id)).then((res) => {\n            if (res.type === ORDER_DELETE_SUCCESS) {\n              dispatch(listMyOrders());\n            } else if (res.type === ORDER_DELETE_FAIL) {\n              console.log(res.payload);\n            }\n          });\n        }\n      };\n    return (\n<Row className=\"justify-content-center\">\n            <Col md={3}>\n                <h2>Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter username'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={12} >\n                <h2>Exclusives</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm text-center'>\n                                <thead>\n                                    <tr>\n                                    \n                                        <th>Paid</th>\n                                        <th>Cancel?</th>\n                                        <th>Already Exlusive?</th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                        <td>\n                                          <LinkContainer to={`/order/${order._id}`}>\n                                            <Button className='btn-sm'>Details</Button>\n                                          </LinkContainer>\n                                        </td>\n                                        <td>\n                                            <Button\n                                            className='btn-sm'\n                                            onClick={() => deleteOrderHandler(order._id)}\n                                            >\n                                            Cancel\n                                            </Button>\n                                        </td>\n\n                                        <td>{order.isBought ? <i className='fas fa-check' style={{ color: 'green' }}></i> : <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\n                                      </tr>\n                                      \n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\ShippingScreen.js",["312","313"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    const countries = [\n        'Afghanistan', 'Albania', 'Algeria', 'Andorra', 'Angola', 'Antigua and Barbuda', 'Argentina', 'Armenia', 'Australia',\n        'Austria', 'Azerbaijan', 'Bahamas', 'Bahrain', 'Bangladesh', 'Barbados', 'Belarus', 'Belgium', 'Belize', 'Benin',\n        'Bhutan', 'Bolivia', 'Bosnia and Herzegovina', 'Botswana', 'Brazil', 'Brunei', 'Bulgaria', 'Burkina Faso', 'Burundi',\n        'Cabo Verde', 'Cambodia', 'Cameroon', 'Canada', 'Central African Republic', 'Chad', 'Chile', 'China', 'Colombia',\n        'Comoros', 'Congo, Democratic Republic of the', 'Congo, Republic of the', 'Costa Rica', 'Cote d\\'Ivoire', 'Croatia',\n        'Cuba', 'Cyprus', 'Czech Republic', 'Denmark', 'Djibouti', 'Dominica', 'Dominican Republic', 'Ecuador', 'Egypt',\n        'El Salvador', 'Equatorial Guinea', 'Eritrea', 'Estonia', 'Eswatini (formerly Swaziland)', 'Ethiopia', 'Fiji',\n        'Finland', 'France', 'Gabon', 'Gambia', 'Georgia', 'Germany', 'Ghana', 'Greece', 'Grenada', 'Guatemala', 'Guinea',\n        'Guinea-Bissau', 'Guyana', 'Haiti', 'Honduras', 'Hungary', 'Iceland', 'India', 'Indonesia', 'Iran', 'Iraq', 'Ireland',\n        'Israel', 'Italy', 'Jamaica', 'Japan', 'Jordan', 'Kazakhstan', 'Kenya', 'Kiribati', 'Kosovo', 'Kuwait', 'Kyrgyzstan',\n        'Laos', 'Latvia', 'Lebanon', 'Lesotho', 'Liberia', 'Libya', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Madagascar',\n        'Malawi', 'Malaysia', 'Maldives', 'Mali', 'Malta', 'Marshall Islands', 'Mauritania', 'Mauritius', 'Mexico', 'Micronesia',\n        'Moldova', 'Monaco', 'Mongolia', 'Montenegro', 'Morocco', 'Mozambique', 'Myanmar (formerly Burma)', 'Namibia', 'Nauru',\n        'Nepal', 'Netherlands', 'New Zealand', 'Nicaragua', 'Niger', 'Nigeria', 'North Korea', 'North Macedonia (formerly Macedonia)',\n'Norway', 'Oman', 'Pakistan', 'Palau', 'Palestine', 'Panama', 'Papua New Guinea', 'Paraguay', 'Peru', 'Philippines',\n'Poland', 'Portugal', 'Qatar', 'Romania', 'Russia', 'Rwanda', 'Saint Kitts and Nevis', 'Saint Lucia',\n'Saint Vincent and the Grenadines', 'Samoa', 'San Marino', 'Sao Tome and Principe', 'Saudi Arabia', 'Senegal',\n'Serbia', 'Seychelles', 'Sierra Leone', 'Singapore', 'Slovakia', 'Slovenia', 'Solomon Islands', 'Somalia',\n'South Africa', 'South Korea', 'South Sudan', 'Spain', 'Sri Lanka', 'Sudan', 'Suriname', 'Sweden', 'Switzerland',\n'Syria', 'Taiwan', 'Tajikistan', 'Tanzania', 'Thailand', 'Timor-Leste (formerly East Timor)', 'Togo', 'Tonga',\n'Trinidad and Tobago', 'Tunisia', 'Turkey', 'Turkmenistan', 'Tuvalu', 'Uganda', 'Ukraine', 'United Arab Emirates',\n'United Kingdom', 'United States of America', 'Uruguay', 'Uzbekistan', 'Vanuatu', 'Vatican City (Holy See)',\n'Venezuela', 'Vietnam', 'Yemen', 'Zambia', 'Zimbabwe'\n];\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Details</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"email\"\n                        placeholder=\"Enter email\"\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Phone</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter phone'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                    required\n                    as='select'\n                    value={country ? country : ''}\n                    onChange={(e) => setCountry(e.target.value)}\n                >\n                    <option value=''>Select country</option>\n                    {countries.map((country, index) => (\n                        <option key={index} value={country}>\n                            {country}\n                        </option>\n                    ))}\n                </Form.Control>\n                </Form.Group>\n                <h1></h1>\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\PlanScreen.js",["314","315"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions'\nimport '../styles/Header.css'\n\nfunction HomeScreen({ history}) {\n  const dispatch = useDispatch()\n  const productList = useSelector(state => state.productList)\n  const { error, loading, products, page, pages } = productList\n\n  let keyword = ''\n\n  useEffect(() => {\n    dispatch(listProducts(keyword))\n  }, [dispatch, keyword])\n\n  return (\n    <div className=\"home-screen-container text-center\">\n      {/* {!keyword && <ProductCarousel />} */}\n      <h3>Be Exclusive\n        \n      </h3>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <div className=\"home-screen-product-list-container text-center\">\n          <Row className=\"home-screen-product-list justify-content-center\">\n            {products.map(product => (\n              <Col key={product._id} sm={15} md={10} lg={4} xl={3} className=\"home-screen-product-col\">\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate page={page} pages={pages} keyword={keyword} className=\"home-screen-pagination\" />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default HomeScreen\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\CartScreen.js",["316","317"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            <Col md={12}>\n               \n                {cartItems.length === 0 ? (\n                    <Message variant='info' class>\n                        Be exclusive <Link to='/plan'>Click Here</Link>\n                    </Message>\n                ) : (\n                       <div>\n                            {cartItems.map(item => (\n                                <h1 key={item.product}>\n                                   \n                                       \n                                       \n                                     \n\n                                        \n\n                                      \n\n                                        <Col >\n                                            <Button\n                                                type='button'\n                                                variant='light'\n                                                onClick={() => removeFromCartHandler(item.product)}\n                                            >\n                                                Cancel\n                                            </Button>\n                                        </Col>\n                                   \n                                </h1>\n                            ))}\n                        </div>\n                    )}\n            </Col>\n\n            <Col md={12}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item style={{ backgroundColor: \"#333\" }} className=\"background-dark\">\n                            <h2 >Price</h2>\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item className='text-center' style={{ backgroundColor: \"#333\" }}>\n                        <Button\n                            type='button'\n                            className='btn-block'\n                            disabled={cartItems.length === 0}\n                            onClick={checkoutHandler}\n                        >\n                            Pay\n                               <br/>\n                        </Button>\n                     \n                    </ListGroup.Item>\n\n                    <br/>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\PaymentScreen.js",["318"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\ProductListScreen.js",["319"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    {/* <h1>Edit</h1> */}\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        {/* <th>ID</th> */}\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        {/* <th>CATEGORY</th>\n                                        <th>BRAND</th> */}\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            {/* <td>{product._id}</td> */}\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            {/* <td>{product.category}</td>\n                                            <td>{product.brand}</td> */}\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\ExclusiveScreen.js",["320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Button, Card, Form, ListGroupItem } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listProductDetails, createProductReview } from '../actions/productActions';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\nimport axios from 'axios';\nimport { listMyOrders } from '../actions/orderActions';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\n\nimport { Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { deleteOrder } from '../actions/orderActions';\nimport { ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL } from '../constants/orderConstants';\n\nfunction ProductScreen({ match, history }) {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const [wishlist, setWishlist] = useState([]);\n  const [bought, setBought] = useState(false);\n  const [owned, setOwned] = useState(false);\n  const [boughtQty, setBoughtQty] = useState(1); // new state variable to track the number of products the user has already bought\n\n  const orderId = match.params.id\n  const dispatch = useDispatch()\n\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const orderDetails = useSelector(state => state.orderDetails)\n  const { order} = orderDetails\n\n  const orderPay = useSelector(state => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector(state => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n\n  const productDetails = useSelector(state => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const userLogin = useSelector(state => state.userLogin);\n  const { userInfo } = userLogin;\n\n\n  const productReviewCreate = useSelector(state => state.productReviewCreate);\n  const {\n    loading: loadingProductReview,\n    error: errorProductReview,\n    success: successProductReview,\n  } = productReviewCreate;\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0);\n      setComment('');\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match, successProductReview]);\n\n  \n\n  useEffect(() => {\n    dispatch({ type: ORDER_LIST_MY_RESET }); // reset the orders state when the component mounts\n    dispatch(listMyOrders(order)); // call the API to get the user's orders\n  }, [dispatch]);\n  \n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n  \n  \n  // const dispatch = useDispatch()\n\n  \n\n\n\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector(state => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n  \n  const deleteOrderHandler = (id) => {\n    if (window.confirm('Are you sure?')) {\n      dispatch({ type: ORDER_DELETE_REQUEST });\n\n      dispatch(deleteOrder(id)).then((res) => {\n        if (res.type === ORDER_DELETE_SUCCESS) {\n          dispatch(listMyOrders());\n        } else if (res.type === ORDER_DELETE_FAIL) {\n          console.log(res.payload);\n        }\n      });\n    }\n  };\n\n  return (\n    <div >\n      <Link to=\"/plan\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div className='text-center'>\n          <Row className='text-center'>\n            {/* <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col> */}\n\n          \n\n            <Col md={12} className='text-center'>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n\n      \n                <ListGroup.Item className='text-center'>\n                  {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n\n            <Col md={12} className='text-center'>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item style={{ backgroundColor: \"#333\" }}>\n                   \n\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>${product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                  \n                                            <ListGroup.Item className=\"d-flex justify-content-center\" style={{ backgroundColor: \"#333\" }}>\n\n  <Col md={12} className=\"text-center\" style={{ backgroundColor: \"#333\" }}>\n    <br/>\n  <h5 className=\"d-flex justify-content-center\">Click Buy!</h5>\n  {loadingOrders ? (\n    <Loader />\n  ) : errorOrders ? (\n    <Message variant='danger'>{errorOrders}</Message>\n  ) : (\n    <h1 className=\"text-center\">\n      {orders.map(order => (\n        <div key={order._id}>\n          <h2>\n            {order.isBought ? (\n              <i className='fas fa-check d-flex justify-content-center' style={{ color: 'green' }}></i>\n            ) : (\n              <i className='fas fa-times d-flex justify-content-center' style={{ color: 'red' }}></i>\n            )}\n          </h2>\n\n          <h4\n            // onClick={() => addToCartHandler(order)}\n            className=\"btn-block text-center\"\n            // type=\"button\"\n            disabled={order.isBought ? true : false} // set the disabled property based on order.isBought\n          >\n            You are already in plan\n          </h4>\n\n          <Button\n          className='btn-sm'\n          onClick={() => deleteOrderHandler(order._id)}\n        >\n          Cancel\n        </Button>\n        </div>\n      ))}\n    </h1>\n  )}\n</Col>\n\n</ListGroup.Item>\n<ListGroup.Item>\n\n<Button\n  onClick={() => addToCartHandler(order)}\n  className=\"btn-block text-center\"\n\n  type=\"button\"\n  disabled={orders && orders.some((order) => order.isBought)}\n>\n  Buy\n</Button>\n\n\n\n</ListGroup.Item>\n\n\n\n              </ListGroup>\n            </Card>\n        </Col>\n\n        </Row>\n  <Row>\n   \n  </Row>\n</div>\n)}\n</div>\n);\n}\nexport default ProductScreen;","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\UserEditScreen.js",["358"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\OrderScreen.js",["359","360","361","362","363","364","365"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AaDd_i7cTaqwPV5p9VhYgEUxsIU87lCGJBEFT7XbtkJiRR7pc6UAHQAvolk4byWDheYIg8LqVN3EA3c5'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n      \n    const download = () => {\n        window.location.href = order.download;\n      };\n      \n      \n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div style={{ backgroundColor: \"#333\" }}>\n                    {/* <h1>Order: {order.Id}</h1> */}\n                    <Row>\n                       \n\n                        <Col className='text-center'>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Exclusive!</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Exclusive:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                \n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>${order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                          \n\n\n               \n{order.isPaid && order.paymentMethod === 'PayPal' && (\n\n<h5 className='text-center'><br/>Enjoy! <br/><br/>You are verified user now!<br/><br/></h5>\n)}\n\n\n\n\n            \n         \n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\RegisterScreen.js",["366"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter username'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\test.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\UserListScreen.js",["367"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\CreatePostScreen.js",["368","369","370","371","372","373","374","375","376","377","378","379","380","381","382"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProfileDetails, updateProfile } from '../actions/profileActions'\r\nimport { PROFILE_UPDATE_RESET } from '../constants/profileConstants'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { deleteOrder } from '../actions/orderActions';\r\nimport { ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL } from '../constants/orderConstants';\r\n\r\nfunction ProfileEditScreen({ match, history }) {\r\n\r\n    const profileId = match.params.id\r\n\r\nconst [headline, setHeadline] = useState('')\r\nconst [description, setDescription] = useState('')\r\nconst [image, setImage] = useState('')\r\nconst [uploading, setUploading] = useState(false)\r\nconst [category, setCategory] = useState()\r\nconst [isVerified, setIsVerified] = useState(false);\r\n\r\nconst dispatch = useDispatch()\r\n\r\nconst profileDetails = useSelector(state => state.profileDetails)\r\nconst { error, loading, profile } = profileDetails\r\n\r\nconst profileUpdate = useSelector(state => state.profileUpdate)\r\nconst { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = profileUpdate\r\n\r\n\r\n\r\nuseEffect(() => {\r\n\r\n    if (successUpdate) {\r\n        dispatch({ type: PROFILE_UPDATE_RESET })\r\n        history.push('/datelist')\r\n    } else {\r\n        if (!profile.headline || profile._id !== Number(profileId)) {\r\n            dispatch(listProfileDetails(profileId))\r\n        } else {\r\n            setHeadline(profile.headline)\r\n            setDescription(profile.description)\r\n            setImage(profile.image)\r\n            setCategory(profile.category)\r\n            setName(profile.headline) \r\n\r\n            setIsVerified(profile.isVerified);\r\n\r\n        }\r\n    }\r\n}, [dispatch, profile, profileId, history, successUpdate])\r\n\r\nconst submitHandler = (e) => {\r\n    e.preventDefault()\r\n    console.log(category); // Add this line to check the value of the category field\r\n\r\n    dispatch(updateProfile({\r\n        _id: profileId,\r\n        headline,\r\n        description,\r\n        image,\r\n        category,\r\n        isVerified: isVerified,\r\n\r\n    }))\r\n}\r\n\r\nconst uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n\r\n    formData.append('image', file)\r\n    formData.append('profile_id', profileId)\r\n\r\n    setUploading(true)\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('https://amoretto.pythonanywhere.com/api/profiles/profileitem/upload/', formData, config)\r\n\r\n        setImage(data)\r\n        setUploading(false)\r\n\r\n    } catch (error) {\r\n        setUploading(false)\r\n    }\r\n}\r\n\r\nconst [name, setName] = useState(profile.headline)\r\nconst [email, setEmail] = useState('')\r\nconst [password, setPassword] = useState('')\r\nconst [confirmPassword, setConfirmPassword] = useState('')\r\nconst [message, setMessage] = useState('')\r\n\r\n\r\n\r\nconst userDetails = useSelector(state => state.userDetails)\r\nconst { error: userError, loading: userLoading, user } = userDetails\r\n\r\nconst userLogin = useSelector(state => state.userLogin);\r\nconst { userInfo } = userLogin;\r\n\r\nconst userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\nconst { success } = userUpdateProfile\r\n\r\nconst orderListMy = useSelector(state => state.orderListMy)\r\nconst { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\nuseEffect(() => {\r\n    if (!userInfo) {\r\n        history.push('/login')\r\n    } else {\r\n        if (!user || !user.name || success || userInfo._id !== user._id) {\r\n            dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n            dispatch(getUserDetails('profile'))\r\n            dispatch(listMyOrders())\r\n        } else {\r\n            // setName(user.name)\r\n            setEmail(user.email)\r\n        }\r\n    }\r\n}, [dispatch, history, userInfo, user, success])\r\n\r\n\r\nreturn (\r\n    <div>\r\n        <Link to='/datelist'>\r\n            Go Back\r\n        </Link>\r\n\r\n        <FormContainer>\r\n            <h1>Edit</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>You are not the owner bitch!</Message>}\r\n\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='headline'>\r\n                            <Form.Label>Your Name</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Your Name'\r\n                                value={headline}\r\n                                onChange={(e) => setHeadline(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>Caption</Form.Label>\r\n                            <Form.Control\r\n                                as='textarea'\r\n                                rows={5}\r\n                                placeholder='Enter description'\r\n                                value={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter image URL'\r\n                                value={image}\r\n                                onChange={(e) => setImage(e.target\r\n                                    .value)}\r\n                                    ></Form.Control>\r\n                                    <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                    ></Form.File>\r\n                                    {uploading && <Loader />}\r\n                                    </Form.Group>                    \r\n                                    {/* <Form.Group controlId='category'>\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control\r\n                                as='select'\r\n                                value={category}\r\n                                onChange={(e) => setCategory(e.target.value)}\r\n                            >\r\n                                <option value=''>Select category...</option>\r\n                                <option value='politics'>Politics</option>\r\n                                <option value='sports'>Sports</option>\r\n                                <option value='gaming'>Gaming</option>\r\n                            </Form.Control>\r\n                        </Form.Group> */}\r\n\r\n{loadingOrders ? (\r\n  <Loader /> \r\n) : errorOrders ? ( \r\n  <Message variant='danger'>{errorOrders}</Message> \r\n) : ( \r\n  orders.map(order => (\r\n\r\n      <>\r\n      {order.isPremium && order.isBought && (\r\n\r\n\r\n<Form.Group controlId='Is Verified'>\r\n              <Form.Label>Show Verified?</Form.Label>\r\n              <input\r\n                type='checkbox'\r\n                id='isVerified'\r\n                checked={isVerified}\r\n                onChange={(e) => setIsVerified(e.target.checked)}\r\n              ></input>\r\n            </Form.Group>\r\n\r\n      \r\n        )}\r\n      </>\r\n  ))\r\n)}\r\n\r\n\r\n                                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            )\r\n        }\r\n    </FormContainer>\r\n</div>\r\n)}\r\n\r\nexport default ProfileEditScreen\r\n\r\n\r\n\r\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\Messages.js",["383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listProfileDetails } from '../actions/profileActions';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { useRef } from 'react';\r\nimport { createProfileReview } from '../actions/profileActions';\r\nimport { PROFILE_CREATE_REVIEW_RESET } from '../constants/profileConstants';\r\n\r\nimport ProfileMessages from '../components/ProfilesMessages';\r\n\r\n\r\nimport { updateHeart,deleteHeart } from '../actions/profileActions'\r\n\r\nimport { addHeartUser, getUserHeartlist } from '../actions/profileActions';\r\nimport {Table} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\n\r\nimport { HEART_UPDATE_RESET } from '../constants/profileConstants'\r\nimport { listProfiles } from '../actions/profileActions';\r\n\r\nfunction ProfileListScreen({ match, history }) {\r\n\r\n    const dispatch = useDispatch();\r\n  \r\n\r\n\r\n\r\n  \r\n\r\n      const userLogin = useSelector(state => state.userLogin)\r\n      const { userInfo } = userLogin\r\n  \r\n\r\n      const [users, setUsers] = useState([]);\r\n      \r\n    \r\n      const heartList = useSelector((state) => state.heartList);\r\n      const { heartlist, error, loading } = heartList;\r\n    \r\n\r\n    \r\n      useEffect(() => {\r\n        dispatch(getUserHeartlist('', userInfo));\r\n        dispatch(getUserDetails('profile'))\r\n    \r\n        const fetchUsers = async () => {\r\n          try {\r\n            const response = await fetch('https://amoretto.pythonanywhere.com/api/users', {\r\n              headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n              },\r\n            });\r\n            const data = await response.json();\r\n            setUsers(data);\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        };\r\n        fetchUsers();\r\n      }, [dispatch, userInfo]);\r\n\r\n    \r\n    \r\n\r\n    \r\n    const profileList = useSelector(state => state.profileList);\r\n    const { error: profileError, loading: profileLoading, profiles, page: profilePage, pages: profilePages } = profileList;\r\n    \r\n   \r\n\r\n    \r\n    useEffect(() => {\r\n      dispatch(listProfiles());\r\n    }, [dispatch]);\r\n  \r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n  \r\n  \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error: userDetailsError, loading: userDetailsLoading, user } = userDetails\r\n  \r\n  \r\n  \r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n  \r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n  \r\n  \r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    \r\n  return (\r\n    <div>\r\n     \r\n    \r\n     <ProfileMessages />\r\n    </div>\r\n  );\r\n  \r\n}\r\nexport default ProfileListScreen;\r\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\PlaceOrderScreen.js",["435","436","437","438"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: [cart.cartItems[0]], // Only pass the first item in the array\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n              \n\n<Col className='text-center' >\n                <Card >\n                    <ListGroup variant='flush' style={{ backgroundColor: \"#333\" }}>\n                        <ListGroup.Item>\n                            <h2>Exclusive Purchase</h2>\n                            {/* <p>{cart.description}</p> */}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Exclusive:</Col>\n                                <Col>${cart.itemsPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Tax:</Col>\n                                <Col>${cart.taxPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Total:</Col>\n                                <Col>${cart.totalPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            {error && <Message variant='danger'>{error}</Message>}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Button\n                                type='button'\n                                className='btn-block'\n                                disabled={cart.cartItems.length === 0}\n                                onClick={placeOrder}\n                            >\n                                Buy\n                            </Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    </div>\n)\n}\n\nexport default PlaceOrderScreen\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\Stalk.js",["439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listProfileDetails } from '../actions/profileActions';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { useRef } from 'react';\r\nimport { createProfileReview } from '../actions/profileActions';\r\nimport { PROFILE_CREATE_REVIEW_RESET } from '../constants/profileConstants';\r\n\r\nimport ProfileStalk from '../components/ProfileStalk';\r\n\r\n\r\nimport { updateHeart,deleteHeart } from '../actions/profileActions'\r\n\r\nimport { addHeartUser, getUserHeartlist } from '../actions/profileActions';\r\nimport {Table} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\n\r\nimport { HEART_UPDATE_RESET } from '../constants/profileConstants'\r\nimport { listProfiles } from '../actions/profileActions';\r\n\r\nfunction ProfileListScreen({ match, history }) {\r\n\r\n    const dispatch = useDispatch();\r\n  \r\n\r\n\r\n\r\n  \r\n\r\n      const userLogin = useSelector(state => state.userLogin)\r\n      const { userInfo } = userLogin\r\n  \r\n\r\n      const [users, setUsers] = useState([]);\r\n      \r\n    \r\n      const heartList = useSelector((state) => state.heartList);\r\n      const { heartlist, error, loading } = heartList;\r\n    \r\n\r\n    \r\n      useEffect(() => {\r\n        dispatch(getUserHeartlist('', userInfo));\r\n        dispatch(getUserDetails('profile'))\r\n    \r\n        const fetchUsers = async () => {\r\n          try {\r\n            const response = await fetch('/api/users', {\r\n              headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n              },\r\n            });\r\n            const data = await response.json();\r\n            setUsers(data);\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        };\r\n        fetchUsers();\r\n      }, [dispatch, userInfo]);\r\n\r\n    \r\n    \r\n\r\n    \r\n    const profileList = useSelector(state => state.profileList);\r\n    const { error: profileError, loading: profileLoading, profiles, page: profilePage, pages: profilePages } = profileList;\r\n    \r\n   \r\n\r\n    \r\n    useEffect(() => {\r\n      dispatch(listProfiles());\r\n    }, [dispatch]);\r\n  \r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n  \r\n  \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error: userDetailsError, loading: userDetailsLoading, user } = userDetails\r\n  \r\n  \r\n  \r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n  \r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n  \r\n  \r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    \r\n  return (\r\n    <div>\r\n      {/* <Link to=\"/\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link> */}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row className=\"justify-content-center\">\r\n        \r\n  \r\n            <Col md={12}>\r\n              {profileLoading ? (\r\n                <Loader /> \r\n              ) : profileError ? ( \r\n                <Message variant='danger'>{profileError}</Message> \r\n              ) : ( \r\n                <>\r\n                  {profiles.map((profile) => {\r\n                    const matchingHeart1 = heartlist.find((heart) =>  heart.userOwner === profile.email );\r\n                    // const matchingHeart2 = heartlist.find((heart) => heart.userHeart === profile.email);\r\n\r\n                    \r\n                    return (\r\n                      <div key={profile._id}>\r\n                \r\n                {/* <div>\r\n  {matchingHeart1 &&  (\r\n    <ProfileStalk profile={profile} />\r\n  )}\r\n </div>\r\n <div>\r\n  {matchingHeart2 &&  (\r\n    <ProfileStalk profile={profile} />\r\n  )}\r\n</div> */}\r\n\r\n\r\n                           {matchingHeart1 && (\r\n                          <div key={matchingHeart1.id}>\r\n                                         \r\n\r\n                            <ListGroup.Item>\r\n                           <div>\r\n                           {user.email === matchingHeart1.userOwner ? (\r\n<h1>\r\n</h1>\r\n) : (\r\n<h1><ProfileStalk profile={profile} />\r\n</h1>\r\n)} \r\n                           </div>\r\n                            {/* <div>\r\n  {matchingHeart.userOwner === profile.email  && (\r\n    <ProfileStalk profile={profile} />\r\n  )}\r\n  </div>\r\n  <div>\r\n  { matchingHeart.userHeart === profile.email && (\r\n    <ProfileStalk profile={profile} />\r\n  )}\r\n</div> */}\r\n\r\n                            </ListGroup.Item>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n}\r\nexport default ProfileListScreen;\r\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\HeartListEdit.js",["480","481","482","483","484","485","486","487","488","489","490"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserHeartlist, updateHeart, deleteHeart } from '../actions/profileActions';\r\nimport { HEART_UPDATE_RESET } from '../constants/profileConstants';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\nimport { listMyOrders } from '../actions/orderActions';\r\nimport { deleteOrder } from '../actions/orderActions';\r\nimport {\r\n  ORDER_DELETE_REQUEST,\r\n  ORDER_DELETE_SUCCESS,\r\n  ORDER_DELETE_FAIL,\r\n} from '../constants/orderConstants';\r\n\r\nfunction HeartEditScreen({ match, history }) {\r\n  const heartlistId = match.params.id;\r\n\r\n  const [isHeart, setIsHeart] = useState(false);\r\n  const [canMessage, setCanMessage] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const heartList = useSelector((state) => state.heartList);\r\n  const { heartlist } = heartList;\r\n\r\n  const heartUpdate = useSelector((state) => state.heartUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = heartUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: HEART_UPDATE_RESET });\r\n      history.push('/heartlist');\r\n    } else {\r\n      if (!heartlist.isHeart || heartlist._id !== Number(heartlistId)) {\r\n     \r\n      } else {\r\n        setIsHeart(heartlist.isHeart);\r\n        setCanMessage(heartlist.canMessage);\r\n      }\r\n    }\r\n  }, [dispatch, heartlist, heartlistId, history, successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateHeart({\r\n        _id: heartlistId,\r\n        isHeart: isHeart,\r\n        canMessage: canMessage,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to='/heartlist'>Go Back</Link>\r\n\r\n      <FormContainer>\r\n        <h1>Waiting for approval...</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {!userInfo ? (\r\n          <Message variant='danger'>Please login to edit your heartlist!</Message>\r\n        ) : errorUpdate ? (\r\n          <Message variant='danger'>Please wait till he/she accepts it.</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='Is Heart'>\r\n              <Form.Label>Heart Him/Her?</Form.Label>\r\n              <input\r\n                type='checkbox'\r\n                id='isHeart'\r\n                checked={isHeart}\r\n                onChange={(e) => setIsHeart(e.target.checked)}\r\n              ></input>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='Is Heart'>\r\n              <Form.Label>Message Him/Her?</Form.Label>\r\n              <input\r\n                type='checkbox'\r\n                id='canMessage'\r\n                checked={canMessage}\r\n                onChange={(e) => setCanMessage(e.target.checked)}\r\n              ></input>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeartEditScreen;\r\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\ProfilesScreen.js",["491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listProfileDetails } from '../actions/profileActions';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { useRef } from 'react';\r\nimport { createProfileReview } from '../actions/profileActions';\r\nimport { PROFILE_CREATE_REVIEW_RESET } from '../constants/profileConstants';\r\n\r\n\r\n\r\nfunction ProfileScreen({ match, history}) {\r\n\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  const [qty, setQty] = useState(1);\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const profileDetails = useSelector(state => state.profileDetails);\r\n  const {  profile, error, loading} = profileDetails;\r\n\r\n\r\n\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n  const [wishlist, setWishlist] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const profileReviewCreate = useSelector(state => state.profileReviewCreate);\r\n  const {\r\n    loading: loadingProfileReview,\r\n    error: errorProfileReview,\r\n    success: successProfileReview,\r\n  } = profileReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successProfileReview) {\r\n      setRating(0);\r\n      setComment('');\r\n      dispatch({ type: PROFILE_CREATE_REVIEW_RESET });\r\n    }\r\n\r\n    dispatch(listProfileDetails(match.params.id));\r\n  }, [dispatch, match, successProfileReview]);\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createProfileReview(\r\n        match.params.id, {\r\n        rating,\r\n        comment\r\n    }\r\n    ));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(listProfileDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cartProfile/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const addToWishlist = () => {\r\n    history.push(`/liked/${match.params.id}?qty=${qty}`);\r\n    setLiked(true); // Update the state to indicate that the user has liked the Profile\r\n\r\n  };\r\n\r\n  const addToPreorder = () => {\r\n    history.push(`/playlist/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n\r\n  const [showPremium, setShowPremium] = useState(false);\r\n  // const [showBasic, setShowBasic] = useState(true);\r\n\r\n  const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    const [showDownload, setShowDownload] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n    const handleDropdownToggle = () => {\r\n      setShowDropdown(!showDropdown);\r\n    };\r\n\r\n    const addToPlaylist = (playlistId, playlistTitle) => {\r\n      history.push(`/playlist/${match.params.id}?qty=${qty}/${playlistTitle}`);\r\n    };\r\n    const download = () => {\r\n      window.location.href = profile.download;\r\n    };\r\n \r\n  return (\r\n    <div>\r\n       \r\n\r\n      {loading ? (\r\n        <Loader />\r\n     ) : error ? ( \r\n        <Message variant=\"danger\">{error}</Message>\r\n     ) : ( \r\n        <div>\r\n          <Row className=\"justify-content-center\">\r\n          <Col className=\"home-screen-product-col d-flex align-items-center justify-content-center\">\r\n  <Card className=\"justify-content-center\">\r\n    <Image\r\n      src={profile.image} \r\n      alt={profile.headline} \r\n      fluid \r\n      className=\"float-md-end mx-auto\" \r\n      style={{ width: '500px', height: '500px', objectFit: 'cover' }}\r\n    />        \r\n  </Card>\r\n  \r\n</Col>\r\n\r\n\r\n\r\n\r\n<div className='text-center'>\r\n                <ListGroup.Item>\r\n\r\n                <Link to=\"/heartlist\" className=\"btn btn-primary\">\r\n\r\nTalk to {profile.headline}\r\n  \r\n</Link>\r\n{/* <Link to={`/message/${profile._id}`} className=\"btn btn-dark my-3\" style={{ color: 'white', backgroundColor: '#24A0ED' }}>\r\n\r\nMessage\r\n  \r\n</Link> */}\r\n\r\n{/* <Link to=\"#\" className=\"btn\" style={{ color: 'white', backgroundColor: '#24A0ED' }}>\r\n\r\n<i>like</i>\r\n  \r\n</Link> */}\r\n\r\n{/* <button className=\"btn btn-dark my-3\"  style={{ color: 'white', backgroundColor: '#24A0ED' }}>Like</button> */}\r\n<Link to=\"/\" className=\"btn btn-dark my-3\">\r\n        Look More\r\n      </Link>\r\n     \r\n                </ListGroup.Item>\r\n                </div>\r\n\r\n<Col md={12} >\r\n<br/>\r\n\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h1>{profile.headline}</h1>\r\n                  <p>Email: {profile.email}</p>\r\n\r\n                  <p>Posted At: {profile.createdAt}</p>\r\n               {profile.description}\r\n                </ListGroup.Item>\r\n              \r\n\r\n             \r\n      \r\n\r\n\r\n              </ListGroup>\r\n\r\n              \r\n            </Col>\r\n\r\n\r\n\r\n      \r\n      </Row>\r\n     \r\n    </div>\r\n   )} \r\n\r\n   \r\n</div>\r\n\r\n);\r\n}\r\n\r\nexport default ProfileScreen;\r\n\r\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\MessageScreen.js",["532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listProfileDetails } from '../actions/profileActions';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { useRef } from 'react';\r\nimport { createProfileReview } from '../actions/profileActions';\r\nimport { PROFILE_CREATE_REVIEW_RESET } from '../constants/profileConstants';\r\n\r\n\r\n\r\nimport { updateHeart,deleteHeart } from '../actions/profileActions'\r\n\r\nimport { addHeartUser, getUserHeartlist } from '../actions/profileActions';\r\nimport {Table} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\n\r\nimport { HEART_UPDATE_RESET } from '../constants/profileConstants'\r\nimport { listProfiles } from '../actions/profileActions';\r\n\r\n\r\nfunction ProfileScreen({ match, history}) {\r\n\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  const [qty, setQty] = useState(1);\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const profileDetails = useSelector(state => state.profileDetails);\r\n  const {  profile, error: profileErrorDetails, loading: profileLoadingDetails} = profileDetails;\r\n\r\n\r\n\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n  const [wishlist, setWishlist] = useState([]);\r\n\r\n  const profileReviewCreate = useSelector(state => state.profileReviewCreate);\r\n  const {\r\n    loading: loadingProfileReview,\r\n    error: errorProfileReview,\r\n    success: successProfileReview,\r\n  } = profileReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successProfileReview) {\r\n      setRating(0);\r\n      setComment('');\r\n      dispatch({ type: PROFILE_CREATE_REVIEW_RESET });\r\n    }\r\n\r\n    dispatch(listProfileDetails(match.params.id));\r\n  }, [dispatch, match, successProfileReview]);\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createProfileReview(\r\n        match.params.id, {\r\n        rating,\r\n        comment\r\n    }\r\n    ));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(listProfileDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cartProfile/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const addToWishlist = () => {\r\n    history.push(`/liked/${match.params.id}?qty=${qty}`);\r\n    setLiked(true); // Update the state to indicate that the user has liked the Profile\r\n\r\n  };\r\n\r\n  const addToPreorder = () => {\r\n    history.push(`/playlist/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n\r\n  const [showPremium, setShowPremium] = useState(false);\r\n  // const [showBasic, setShowBasic] = useState(true);\r\n\r\n  const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    const [showDownload, setShowDownload] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n    const handleDropdownToggle = () => {\r\n      setShowDropdown(!showDropdown);\r\n    };\r\n\r\n    const addToPlaylist = (playlistId, playlistTitle) => {\r\n      history.push(`/playlist/${match.params.id}?qty=${qty}/${playlistTitle}`);\r\n    };\r\n    const download = () => {\r\n      window.location.href = profile.download;\r\n    };\r\n \r\n\r\n    //STATEMENTS\r\n\r\n\r\n    const heartlistId = match.params.id\r\n\r\n    const [hearted, setHearted] = useState(false);\r\n    const [userReceiver, setUserReceiver] = useState('');\r\n    const [isHeart, setIsHeart] = useState(false);\r\n    const [canMessage, setCanMessage] = useState(false);\r\n    const [users, setUsers] = useState([]);\r\n    \r\n  \r\n    const heartList = useSelector((state) => state.heartList);\r\n    const { heartlist, error, loading } = heartList;\r\n  \r\n    const heartDelete = useSelector(state => state.heartDelete);\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = heartDelete;\r\n    \r\n    useEffect(() => {\r\n      dispatch(getUserHeartlist('', userInfo));\r\n    }, [dispatch, userInfo]);\r\n  \r\n    const handleFormSubmit = (e) => {\r\n      e.preventDefault();\r\n      dispatch(\r\n        addHeartUser(userReceiver, isHeart, canMessage)\r\n      );\r\n      setHearted(true);\r\n    };\r\n    \r\n  \r\n    useEffect(() => {\r\n      dispatch(getUserHeartlist('', userInfo));\r\n      dispatch(getUserDetails('profile'))\r\n  \r\n      const fetchUsers = async () => {\r\n        try {\r\n          const response = await fetch('https://amoretto.pythonanywhere.com/api/users', {\r\n            headers: {\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          });\r\n          const data = await response.json();\r\n          setUsers(data);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      };\r\n      fetchUsers();\r\n    }, [dispatch, userInfo, successDelete]);\r\n    \r\n    const heartUpdate = useSelector(state => state.heartUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = heartUpdate\r\n  \r\n  \r\n    useEffect(() => {\r\n      if (successUpdate) {\r\n          dispatch({ type: HEART_UPDATE_RESET });\r\n          \r\n          history.push('/heartlist');\r\n      }\r\n  }, [dispatch, successUpdate, history]);\r\n  \r\n  \r\n  \r\n  const [updatedIsHeart, setUpdatedIsHeart] = useState(false);\r\n  const [updatedCanMessage, setUpdatedCanMessage] = useState(false);\r\n  \r\n  \r\n  const handleUpdateClick = () => {\r\n  \r\n    setUpdatedIsHeart(isHeart);\r\n    setUpdatedCanMessage(canMessage);\r\n  }\r\n  \r\n  const handleModalSave = () => {\r\n    dispatch(updateHeart( updatedIsHeart, updatedCanMessage));\r\n  \r\n    }\r\n  \r\n    const deleteHandler = (id) => {\r\n  \r\n      if (window.confirm('Are you sure you want to delete this Profile?')) {\r\n          dispatch(deleteHeart(id));\r\n      }\r\n  }\r\n  \r\n  const profileList = useSelector(state => state.profileList);\r\n  const { error: profileError, loading: profileLoading, profiles, page: profilePage, pages: profilePages } = profileList;\r\n  \r\n  \r\n  \r\n  useEffect(() => {\r\n    dispatch(listProfiles());\r\n  }, [dispatch]);\r\n\r\n  \r\n  return (\r\n    <div>\r\n       \r\n      {/* <Link to=\"/\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link> */}\r\n      {loading ? (\r\n        <Loader />\r\n     ) : error ? ( \r\n        <Message variant=\"danger\">{error}</Message>\r\n     ) : ( \r\n        <div>\r\n          <Row className=\"justify-content-center\">\r\n         \r\n\r\n          <Col md={12} className=\"home-screen-product-col align-items-center justify-content-center\">\r\n  {/* <ListGroup > */}\r\n    {loading ? (\r\n      <Loader />\r\n    ) : error ? (\r\n      <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n      <div>\r\n        <ListGroup.Item>\r\n        </ListGroup.Item>\r\n      </div>\r\n    )}\r\n\r\n</Col>\r\n\r\n\r\n        <Col md={12}>\r\n        \r\n   \r\n\r\n         {loading ? (\r\n  <Loader /> \r\n) : error ? ( \r\n  <Message variant='danger'>{error}</Message> \r\n) : ( \r\n  heartlist.map(heart => (\r\n\r\n    \r\n    <div key={heart.id}>\r\n\r\n      <h2>\r\n      {heart.canMessage && heart.userHeart && profile.email && heart.userHeart === profile.email && (\r\n          <div>\r\n\r\n<ListGroup.Item>\r\n<div >\r\n\r\n\r\n      \r\n<Col md={12} className=\"home-screen-product-col align-items-center justify-content-center\">\r\n  {/* <ListGroup > */}\r\n    {loading ? (\r\n      <Loader />\r\n    ) : error ? (\r\n      <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n      <div>\r\n        <ListGroup.Item>\r\n          <div>\r\n          <Card style={{ backgroundColor: '#333', color: '#fff' }}>\r\n              <h2 className='text-center'>Messages</h2>\r\n              {profile.reviews.length === 0 && <Message>No Messages</Message>}\r\n              <ListGroup variant='flush'>\r\n                <>\r\n                {profile.reviews.map((review) => (\r\n              \r\n              \r\n              <ListGroup.Item key={review._id}>\r\n               \r\n                    <h5>{review.name}</h5>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                </>\r\n              </ListGroup>\r\n            </Card>\r\n          </div>\r\n        </ListGroup.Item>\r\n      </div>\r\n    )}\r\n  {/* </ListGroup> */}\r\n</Col>\r\n       \r\n              {/* <h2>Write a Message</h2> */}\r\n              {successProfileReview && (\r\n                <Message variant=\"success\">\r\n                  Message submitted successfully\r\n                </Message>\r\n              )}\r\n              {loadingProfileReview && <Loader />}\r\n              {errorProfileReview && (\r\n                <Message variant=\"danger\">{errorProfileReview}</Message>\r\n              )}\r\n              {userInfo ? (\r\n                <Form onSubmit={submitHandler}>\r\n                  <Form.Group controlId=\"rating\">\r\n                  \r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label></Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProfileReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Send\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a message</Message>\r\n                                                )}\r\n                                   \r\n                           \r\n                              \r\n      \r\n</div>\r\n\r\n            </ListGroup.Item>\r\n\r\n        \r\n\r\n          </div>\r\n        )}\r\n      </h2>\r\n    </div>\r\n  ))\r\n\r\n  \r\n)}\r\n\r\n        \r\n\r\n     \r\n          \r\n\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n   )} \r\n</div>\r\n\r\n);\r\n}\r\n\r\nexport default ProfileScreen;\r\n\r\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\HeartList.js",["592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addHeartUser, getUserHeartlist } from '../actions/profileActions';\r\nimport {Table} from 'react-bootstrap'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nimport { listProfileDetails, updateHeart,deleteHeart } from '../actions/profileActions'\r\nimport { HEART_UPDATE_RESET } from '../constants/profileConstants'\r\nimport { listProfiles } from '../actions/profileActions';\r\n\r\nconst HeartListScreen = ({ match, history }) => {\r\n\r\n  const heartlistId = match.params.id\r\n\r\n  const [hearted, setHearted] = useState(false);\r\n  const [isHeart, setIsHeart] = useState(false);\r\n  const [canMessage, setCanMessage] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  \r\n  const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const profileDetails = useSelector((state) => state.profileDetails);\r\n  const { loading, error, profile } = profileDetails;\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { error: userError, loading: userLoading, userInfo } = userLogin\r\n\r\n  const userDetails = useSelector(state => state.userDetails)\r\n  const { error: userDetailsError, loading: userDetailsLoading, user } = userDetails\r\n\r\n  const heartList = useSelector((state) => state.heartList);\r\n  const { heartlist } = heartList;\r\n\r\n  const heartDelete = useSelector(state => state.heartDelete);\r\n  const { loading: loadingDelete, error: errorDelete, success: successDelete } = heartDelete;\r\n  \r\n  useEffect(() => {\r\n    dispatch(getUserHeartlist('', userInfo));\r\n  }, [dispatch, userInfo]);\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      addHeartUser(userReceiver, isHeart, canMessage)\r\n    );\r\n    setHearted(true);\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    dispatch(getUserHeartlist('', userInfo));\r\n    dispatch(getUserDetails('profile'))\r\n\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await fetch('https://amoretto.pythonanywhere.com/api/users', {\r\n          headers: {\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        });\r\n        const data = await response.json();\r\n        setUsers(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, [dispatch, userInfo, successDelete]);\r\n  \r\n  const heartUpdate = useSelector(state => state.heartUpdate)\r\n  const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = heartUpdate\r\n\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n        dispatch({ type: HEART_UPDATE_RESET });\r\n        \r\n        history.push('/heartlist');\r\n    }\r\n}, [dispatch, successUpdate, history]);\r\n\r\n\r\n\r\nconst [updatedIsHeart, setUpdatedIsHeart] = useState(false);\r\nconst [updatedCanMessage, setUpdatedCanMessage] = useState(false);\r\n\r\n\r\nconst handleUpdateClick = () => {\r\n\r\n  setUpdatedIsHeart(isHeart);\r\n  setUpdatedCanMessage(canMessage);\r\n}\r\n\r\nconst handleModalSave = () => {\r\n  dispatch(updateHeart( updatedIsHeart, updatedCanMessage));\r\n\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n\r\n    if (window.confirm('Are you sure you want to delete this Profile?')) {\r\n        dispatch(deleteHeart(id));\r\n    }\r\n}\r\n\r\nconst profileList = useSelector(state => state.profileList);\r\nconst { error: profileError, loading: profileLoading, profiles, page: profilePage, pages: profilePages } = profileList;\r\n\r\n\r\n\r\nuseEffect(() => {\r\n  dispatch(listProfiles());\r\n}, [dispatch]);\r\n\r\nconst [userReceiver, setUserReceiver] = useState(profile.email);\r\n\r\n  return (\r\n    <div>\r\n\r\n          \r\n{error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n          {userDetailsError && <Message variant='danger'>{userDetailsError}</Message>}\r\n            {userDetailsLoading && <Loader />}\r\n\r\n  \r\n              {loadingDelete && <Loader />}\r\n        {errorDelete && <Message variant='danger'>You are not the owner</Message>}\r\n\r\n\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : error ? (\r\n        <p>{error}</p>\r\n      ) : (\r\n        <div>\r\n<div className='text-center'>\r\n          <h2>Send Request</h2>\r\n          <p>(Please send request to message {profile.email})</p>\r\n\r\n          <form onSubmit={handleFormSubmit}>\r\n          <label htmlFor=\"userReceiver\"> </label>\r\n<select\r\n  id=\"userReceiver\"\r\n  value={userReceiver || profile.email} // Check if profile.email exists, if yes then select it else select the value in state\r\n  onChange={(e) => setUserReceiver(e.target.value)}\r\n>\r\n  <option value=''>Select a user</option>\r\n  {profiles.map((profile) => (\r\n\r\n    <option key={profile._id} value={profile.email}>\r\n      {profile.email}\r\n    </option>\r\n\r\n\r\n\r\n  ))}\r\n</select>\r\n\r\n\r\n\r\n            <button type=\"submit\">Send</button>\r\n          </form>\r\n\r\n          <br/>\r\n          \r\n</div>\r\n\r\n          <h2>Requests</h2>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n       \r\n                <th>Sender</th>\r\n                <th>Sent To</th>\r\n      \r\n                <th>Heart</th>\r\n                <th>Message Request</th>\r\n                <th></th>\r\n\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {heartlist.map((heart) => (\r\n                <tr key={heart._id}>\r\n                 \r\n         \r\n                  <td>{heart.userOwner}</td>\r\n                  <td>{heart.userHeart}</td>\r\n          \r\n                  <td>\r\n                 \r\n                    \r\n                    {heart.isHeart? 'Yes' : ''}</td>\r\n                  <td>\r\n                    \r\n                  \r\n                    {heart.canMessage ? 'Accepted' : ''}</td>\r\n                    <td>\r\n                    <LinkContainer to={`/stalk`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    View\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                    <LinkContainer to={`/heart/${heart._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(heart._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n\r\n                                            {/* <LinkContainer to={`/message/${profile._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Message\r\n                                                </Button>\r\n                                            </LinkContainer> */}\r\n                                            \r\n\r\n                                            \r\n          </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n\r\n         \r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeartListScreen;\r\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\CreatePostListScreen.js",["622","623","624","625","626","627","628","629","630","631","632"],"import React, { useState, useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\nimport { getUserProfiles, listProfile, deleteProfile, createProfile } from '../actions/profileActions';\r\nimport { PROFILE_CREATE_RESET } from '../constants/profileConstants';\r\n\r\n\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\nconst profileList = useSelector(state => state.profileList);\r\nconst { loading, error, profiles, pages, page } = profileList;\r\n\r\nconst profileDelete = useSelector(state => state.profileDelete);\r\nconst { loading: loadingDelete, error: errorDelete, success: successDelete } = profileDelete;\r\n\r\nconst profileCreate = useSelector(state => state.profileCreate);\r\nconst { loading: loadingCreate, error: errorCreate, success: successCreate, profile: createdProfile } = profileCreate;\r\n\r\nconst userLogin = useSelector(state => state.userLogin);\r\nconst { userInfo } = userLogin;\r\n\r\nlet keyword = history.location.search;\r\n\r\n\r\nuseEffect(() => {\r\n    dispatch({ type: PROFILE_CREATE_RESET });\r\n  \r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n  \r\n    if (successCreate) {\r\n      history.push(`/create/date/${createdProfile._id}/edit`);\r\n    } else {\r\n      dispatch(getUserProfiles(keyword, userInfo)); // Pass the userInfo object to filter Profile items by user\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete, successCreate, createdProfile, keyword]);\r\n  \r\n\r\nconst deleteHandler = (id) => {\r\n\r\n    if (window.confirm('Are you sure you want to delete this Profile?')) {\r\n        dispatch(deleteProfile(id));\r\n    }\r\n}\r\n\r\nconst createProfileHandler = () => {\r\n    dispatch(createProfile(isVerified));\r\n}\r\nconst [isVerified, setIsVerified] = useState(false);\r\n\r\n\r\nconst [name, setName] = useState('')\r\nconst [email, setEmail] = useState('')\r\nconst [password, setPassword] = useState('')\r\nconst [confirmPassword, setConfirmPassword] = useState('')\r\nconst [message, setMessage] = useState('')\r\n\r\n\r\n\r\nconst userDetails = useSelector(state => state.userDetails)\r\nconst { user } = userDetails\r\n\r\n\r\n\r\nconst userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\nconst { success } = userUpdateProfile\r\n\r\nconst orderListMy = useSelector(state => state.orderListMy)\r\nconst { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\nuseEffect(() => {\r\n    if (!userInfo) {\r\n        history.push('/login')\r\n    } else {\r\n        if (!user || !user.name || success || userInfo._id !== user._id) {\r\n            dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n            dispatch(getUserDetails('profile'))\r\n            dispatch(listMyOrders())\r\n        } else {\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n        }\r\n    }\r\n}, [dispatch, history, userInfo, user, success])\r\n\r\n\r\n\r\n\r\nreturn (\r\n    <div>\r\n        <Row className='align-items-center'>\r\n           \r\n\r\n            <Col className='text-right'>\r\n                <Button className='my-3' onClick={createProfileHandler}>\r\n                    <i className='fas fa-plus'></i> Create\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n\r\n        {loadingDelete && <Loader />}\r\n        {errorDelete && <Message variant='danger'>You are not the owner</Message>}\r\n\r\n\r\n        {loadingCreate && <Loader />}\r\n        {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n        {loading\r\n            ? (<Loader />)\r\n            : error\r\n                ? (<Message variant='danger'>{error}</Message>)\r\n                : (\r\n                    <div>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th>User</th> */}\r\n                                    <th>Name</th>\r\n                                    <th>Caption</th>\r\n                                    <th>Posted At</th>\r\n                                    <th>Edit</th>\r\n                                    <th>Verified</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {profiles.map(item => (\r\n                                    <tr key={item._id}>\r\n                                        {/* <td>{item.user}</td> */}\r\n\r\n                                        <td>{item.headline}</td>\r\n                                        <td>{item.description}</td>\r\n                                        <td>{item.createdAt ? item.createdAt.substring(0, 10) : ''}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/create/date/${item._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(item._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n\r\n                                        <td>\r\n\r\n\r\n                                            \r\n         {loadingOrders ? (\r\n  <Loader /> \r\n) : errorOrders ? ( \r\n  <Message variant='danger'>{errorOrders}</Message> \r\n) : ( \r\n  orders.map(order => (\r\n\r\n      <>\r\n      {order.isPremium && order.isBought && (\r\n\r\n\r\n<p>\r\n{item.isVerified ? (\r\n  <i className=\"fa fa-check\"></i> // Display check icon if isVerified is true\r\n) : (\r\n  <i className=\"fa fa-times\"></i> // Display X icon if isVerified is false\r\n)}\r\n</p>\r\n      \r\n        )}\r\n      </>\r\n  ))\r\n)}\r\n\r\n      \r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                       \r\n                            </Table>                    <Paginate pages={pages} page={page} keyword={keyword} />\r\n                </div>\r\n            )\r\n    }\r\n</div>\r\n)}\r\n\r\nexport default ProfileListScreen;","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\OrderListScreen.js",["633"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1>Exclusive Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    {/* <th>ID</th>\n                                    <th>USER</th> */}\n                                    <th>DATE</th>\n                                    <th>Total</th>\n                                    <th>PAID</th>\n                                    {/* <th>DELIVERED</th> */}\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        {/* <td>{order._id}</td> */}\n                                        {/* <td>{order.user && order.user.name}</td> */}\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        {/* <td>{order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td> */}\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default OrderListScreen","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\ProfilesListScreen.js",["634","635","636","637","638","639"],"import React, { useState, useEffect } from 'react';\r\nimport Profile from '../components/Profiles';\r\n\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listProfiles } from '../actions/profileActions';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, Carousel } from 'react-bootstrap'; // import Carousel\r\n\r\nimport Paginate from '../components/Paginate';\r\nimport ProfileCarousel from '../components/ProfilesCarousel';\r\nimport SearchBox from '../components/SearchBox';\r\n\r\nfunction ProfileListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const profileList = useSelector(state => state.profileList);\r\n  const { error: profileError, loading: profileLoading, profiles, page: profilePage, pages: profilePages } = profileList;\r\n\r\n  let keyword = history.location.search;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProfiles(keyword));\r\n  }, [dispatch, keyword]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword) {\r\n      history.push(`/ProfileList${keyword}&search=${keyword}`);\r\n    } else {\r\n      history.push(`/ProfileList/search/${keyword}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: '10px', padding: '5px' }}>\r\n\r\n      {/* <SearchBox submitHandler={submitHandler} /> */}\r\n      <br />\r\n      {/* {!keyword && <ProfileCarousel />} */}\r\n      {profileLoading ? (\r\n        <Loader />\r\n      ) : profileError ? (\r\n        <Message variant=\"danger\">{profileError}</Message>\r\n      ) : (\r\n        \r\n        <div style={{ width: 'auto', margin: '0 auto' }}  >\r\n\r\n<Carousel pause={true} interval={null}>\r\n            {profiles.map((profile) => (\r\n              <Carousel.Item key={profile._id} sm={1} md={3} lg={2} xl={1} >\r\n      <Profile profile={profile} />\r\n              </Carousel.Item>\r\n            ))}\r\n          </Carousel>\r\n\r\n          <Paginate\r\n            page={profilePage}\r\n            pages={profilePages}\r\n            keyword={keyword}\r\n            className=\"home-screen-pagination\"\r\n          />\r\n        \r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileListScreen;\r\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\screens\\ProductEditScreen.js",["640","641","642","643"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\n\nfunction ProductEditScreen({ match, history }) {\n\n    const productId = match.params.id\n\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n    const [uploading, setUploading] = useState(false)\n    const [download, setDownload] = useState('')\n    const [watch, setWatch] = useState('')\n    const [preorderdate, setPreorder] = useState('')\n    const dispatch = useDispatch()\n    const [uploadingDownload, setUploadingDownload] = useState(false)\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { error, loading, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\n\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n            if (!product.name || product._id !== Number(productId)) {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                setBrand(product.brand)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n                setDownload(product.download)\n                setWatch(product.watch)\n                setPreorder(product.preorderdate)\n\n            }\n        }\n\n\n\n    }, [dispatch, product, productId, history, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProduct({\n            _id: productId,\n            name,\n            price,\n            image,\n            brand,\n            category,\n            countInStock,\n            description,\n            download,\n            watch,\n            preorderdate\n        }))\n    }\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('product_id', productId)\n\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('https://amoretto.pythonanywhere.com/api/products/upload/', formData, config)\n\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            setUploading(false)\n        }\n    }\n\n    const uploadDownloadHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('download', file)\n        formData.append('product_id', productId)\n\n        setUploadingDownload(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('https://amoretto.pythonanywhere.com/api/products/upload/', formData, config)\n\n\n            setDownload(data)\n            setUploadingDownload(false)\n\n        } catch (error) {\n            setUploadingDownload(false)\n\n        }\n    }\n    return (\n        <div>\n            <Link to='/admin/productlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit Subscription</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='price'>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter price'\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                       \n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default ProductEditScreen","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\Message.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\SearchBox.js",["644"],"import React, { useState } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nfunction SearchBox() {\n    const [keyword, setKeyword] = useState('')\n\n    let history = useHistory()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (keyword) {\n            history.push(`/?keyword=${keyword}&page=1`)\n        } else {\n            history.push(history.push(history.location.pathname))\n        }\n    }\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Form.Control\n                type='text'\n                name='q'\n                placeholder='Search'\n\n                onChange={(e) => setKeyword(e.target.value)}\n                className='mr-sm-2 ml-sm-5'\n            ></Form.Control>\n\n            {/* <Button\n                type='submit'\n                variant='outline-success'\n                className='p-2'\n            >\n                Submit\n            </Button> */}\n          \n        </Form>\n    )\n}\n\nexport default SearchBox\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\Product.js",["645"],"import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport Rating from './Rating';\nimport { Link } from 'react-router-dom';\nimport './Product.css'\nfunction Product({ product, plan }) {\n  return (\n    <div className=\"text-center\">\n    <Card className=\"my-3 p-3 rounded bg-dark text-white \">\n      <Link to={`/product/${product._id}`}>\n        {/* <Card.Img src={product.image} variant=\"top\" /> */}\n      </Link>\n\n      <Card.Body >\n      <Link style={{ color: 'white', textDecoration: 'none' }} to={`/product/${product._id}`}>\n  <Card.Title as=\"h3\">\n    <strong>{product.name}</strong>\n  </Card.Title>\n</Link>\n\n\n        {/* <Card.Text as=\"div\">\n          <div className=\"my-3\">\n            <Rating\n              value={product.rating}\n              text={`${product.numReviews} reviews`}\n              color={'#f8e825'}\n            />\n          </div>\n        </Card.Text> */}\n\n        <Card.Text as=\"h3\" className=\"mb-3\">\n          ${product.price}\n        </Card.Text>\n        \n{/* \n        <Card.Text as=\"h5\" className=\"mb-3\">\n  {product.countInStock === 0 ? \"Out of Stock\" : `Available`}\n</Card.Text> */}\n\n\n<Link to={`/product/${product._id}`} className=\"btn btn-secondary\">\n  View Details\n</Link>\n\n      </Card.Body>\n    </Card>\n    </div>\n  );\n}\n\nexport default Product;\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\Profiles.js",["646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680"],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\ProfilesCarousel.js",["681"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProfiles } from '../actions/profileActions'\r\n\r\nfunction ProfileCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const  profileTopRated = useSelector(state => state. profileTopRated)\r\n    const { error, loading, profiles } =  profileTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProfiles())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {profiles.map(profile => (\r\n                        <Carousel.Item key={profile._id}>\r\n                            <Link to={`/Profile/${profile._id}`}>\r\n                                <Image src={profile.image} alt={profile.title} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{profile.title} - {profile.name} </h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileCarousel\r\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\constants\\profileConstants.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\actions\\userActions.js",["682"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            'https://amoretto.pythonanywhere.com/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            'https://amoretto.pythonanywhere.com/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `https://amoretto.pythonanywhere.com/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `https://amoretto.pythonanywhere.com/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `https://amoretto.pythonanywhere.com/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `https://amoretto.pythonanywhere.com/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `https://amoretto.pythonanywhere.com/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\actions\\productActions.js",["683"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`https://amoretto.pythonanywhere.com/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`https://amoretto.pythonanywhere.com/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`https://amoretto.pythonanywhere.com/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `https://amoretto.pythonanywhere.com/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `https://amoretto.pythonanywhere.com/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `https://amoretto.pythonanywhere.com/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `https://amoretto.pythonanywhere.com/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\actions\\orderActions.js",["684","685","686"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n\n    ORDER_DELETE_REQUEST,\n  ORDER_DELETE_SUCCESS,\n  ORDER_DELETE_FAIL,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `https://amoretto.pythonanywhere.com/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `https://amoretto.pythonanywhere.com/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `https://amoretto.pythonanywhere.com/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `https://amoretto.pythonanywhere.com/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `https://amoretto.pythonanywhere.com/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `https://amoretto.pythonanywhere.com/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const deleteOrder = (id) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: ORDER_DELETE_REQUEST });\n  \n      const {\n        userLogin: { userInfo },\n      } = getState();\n  \n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n  \n      await axios.delete(`https://amoretto.pythonanywhere.com/api/orders/${id}/delete/`, config);\n  \n      dispatch({ type: ORDER_DELETE_SUCCESS, payload: id });\n  \n      // Retrieve the list of orders and update the state\n      dispatch({ type: ORDER_LIST_MY_REQUEST });\n  \n      const { data } = await axios.get('https://amoretto.pythonanywhere.com/api/orders/myorders/', config);\n  \n      dispatch({ type: ORDER_LIST_MY_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: ORDER_DELETE_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\actions\\profileActions.js",["687","688","689"],"import axios from 'axios'\r\nimport {\r\nPROFILE_LIST_REQUEST,\r\nPROFILE_LIST_SUCCESS,\r\nPROFILE_LIST_FAIL,\r\nPROFILE_DETAILS_REQUEST,\r\nPROFILE_DETAILS_SUCCESS,\r\nPROFILE_DETAILS_FAIL,\r\nPROFILE_HEART_REQUEST, PROFILE_HEART_SUCCESS, PROFILE_HEART_FAIL,\r\nPROFILE_HEART_LIST_REQUEST, PROFILE_HEART_LIST_SUCCESS, PROFILE_HEART_LIST_FAIL,\r\n\r\nPROFILE_DELETE_REQUEST,\r\nPROFILE_DELETE_SUCCESS,\r\nPROFILE_DELETE_FAIL,\r\n\r\nPROFILE_CREATE_REQUEST,\r\nPROFILE_CREATE_SUCCESS,\r\nPROFILE_CREATE_FAIL,\r\n\r\nPROFILE_UPDATE_REQUEST,\r\nPROFILE_UPDATE_SUCCESS,\r\nPROFILE_UPDATE_FAIL,\r\n\r\nPROFILE_CREATE_REVIEW_REQUEST,\r\nPROFILE_CREATE_REVIEW_SUCCESS,\r\nPROFILE_CREATE_REVIEW_FAIL,\r\n\r\nPROFILE_TOP_REQUEST,\r\nPROFILE_TOP_SUCCESS,\r\nPROFILE_TOP_FAIL,\r\n\r\nHEART_UPDATE_REQUEST,\r\n  HEART_UPDATE_SUCCESS,\r\n  HEART_UPDATE_FAIL,\r\n  HEART_UPDATE_RESET,\r\n  HEART_DELETE_REQUEST,\r\n  HEART_DELETE_SUCCESS,\r\n  HEART_DELETE_FAIL,\r\n} from '../constants/profileConstants'\r\n\r\nexport const deleteHeart = (id) => async (dispatch, getState) => {\r\n  try {\r\n  dispatch({\r\n  type: HEART_DELETE_REQUEST\r\n  })\r\n\r\n  const {\r\n      userLogin: { userInfo },\r\n  } = getState()\r\n\r\n  const config = {\r\n      headers: {\r\n          'Content-type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n  }\r\n\r\n  const { data } = await axios.delete(\r\n      `https://amoretto.pythonanywhere.com/api/hearts/delete/${id}/`,\r\n      config\r\n  )\r\n\r\n  dispatch({\r\n      type: HEART_DELETE_SUCCESS,\r\n  })\r\n\r\n\r\n} catch (error) {\r\n  dispatch({\r\n      type: HEART_DELETE_FAIL,\r\n      payload: error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n  })\r\n}\r\n}\r\n\r\nexport const updateHeart = (heartlist, isHeart, canMessage) => async (dispatch, getState) => {\r\n  try {\r\n  dispatch({\r\n  type: HEART_UPDATE_REQUEST,\r\n  });\r\n  const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    \r\n    const { data } = await axios.put(\r\n      `https://amoretto.pythonanywhere.com/api/hearts/update/${heartlist._id}/`,\r\n      {heartlist, isHeart: heartlist.isHeart, canMessage: heartlist.canMessage},\r\n      config\r\n    );\r\n    \r\n    dispatch({\r\n      type: HEART_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n      dispatch({\r\n      type: HEART_UPDATE_FAIL,\r\n      payload: error.response && error.response.data.detail\r\n      ? error.response.data.detail\r\n      : error.message,\r\n      });\r\n      }\r\n      };\r\n\r\nexport const addHeartUser = (userReceiver, isHeart, canMessage) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PROFILE_HEART_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post('https://amoretto.pythonanywhere.com/api/hearts/createheartlist/', { userReceiver, isHeart, canMessage }, config);\r\n\r\n    dispatch({\r\n      type: PROFILE_HEART_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_HEART_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const getUserHeartlist = (keyword = '', userInfo = null) => async (dispatch) => {\r\n  try {\r\n  dispatch({ type: PROFILE_HEART_LIST_REQUEST });\r\n\r\n  const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n  \r\n    if (userInfo) {\r\n      config.headers['Authorization'] = `Bearer ${userInfo.token}`;\r\n    }\r\n  \r\n    const { data } = await axios.get(`https://amoretto.pythonanywhere.com/api/hearts/heartlist/`, config);\r\n  \r\n    dispatch({\r\n      type: PROFILE_HEART_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_HEART_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserProfiles = (keyword = '', userInfo = null) => async (dispatch) => {\r\n    try {\r\n    dispatch({ type: PROFILE_LIST_REQUEST });\r\n  \r\n    const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n    \r\n      if (userInfo) {\r\n        config.headers['Authorization'] = `Bearer ${userInfo.token}`;\r\n      }\r\n    \r\n      const { data } = await axios.get(`https://amoretto.pythonanywhere.com/api/profiles/myprofiles`, config);\r\n    \r\n      dispatch({\r\n        type: PROFILE_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PROFILE_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n};\r\n\r\nexport const listProfiles = (keyword = '', userInfo = null) => async (dispatch) => {\r\n    try {\r\n    dispatch({ type: PROFILE_LIST_REQUEST });\r\n    const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n    \r\n      if (userInfo) {\r\n        config.headers['Authorization'] = `Bearer ${userInfo.token}`;\r\n      }\r\n    \r\n      const { data } = await axios.get(`https://amoretto.pythonanywhere.com/api/profiles${keyword}`, config);\r\n    \r\n      dispatch({\r\n        type: PROFILE_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PROFILE_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n};\r\n\r\nexport const listTopProfiles = () => async (dispatch) => {\r\n    try {\r\n    dispatch({ type: PROFILE_TOP_REQUEST })\r\n    const { data } = await axios.get(`https://amoretto.pythonanywhere.com/api/profiles/top/`)\r\n\r\n    dispatch({\r\n        type: PROFILE_TOP_SUCCESS,\r\n        payload: data\r\n    })\r\n\r\n} catch (error) {\r\n    dispatch({\r\n        type: PROFILE_TOP_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n    })\r\n}\r\n}\r\n\r\nexport const listProfileDetails = (id) => async (dispatch) => {\r\n    try {\r\n    dispatch({ type: PROFILE_DETAILS_REQUEST })\r\n    const { data } = await axios.get(`https://amoretto.pythonanywhere.com/api/profiles/${id}`)\r\n\r\n    dispatch({\r\n        type: PROFILE_DETAILS_SUCCESS,\r\n        payload: data\r\n    })\r\n\r\n} catch (error) {\r\n    dispatch({\r\n        type: PROFILE_DETAILS_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n    })\r\n}\r\n}\r\n\r\nexport const deleteProfile = (id) => async (dispatch, getState) => {\r\n    try {\r\n    dispatch({\r\n    type: PROFILE_DELETE_REQUEST\r\n    })\r\n\r\n    const {\r\n        userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    }\r\n\r\n    const { data } = await axios.delete(\r\n        `https://amoretto.pythonanywhere.com/api/profiles/delete/${id}/`,\r\n        config\r\n    )\r\n\r\n    dispatch({\r\n        type: PROFILE_DELETE_SUCCESS,\r\n    })\r\n\r\n\r\n} catch (error) {\r\n    dispatch({\r\n        type: PROFILE_DELETE_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n    })\r\n}\r\n}\r\n\r\n\r\nexport const createProfile = (isVerified) => async (dispatch, getState) => {\r\n    try {\r\n    dispatch({\r\n    type: PROFILE_CREATE_REQUEST,\r\n    });\r\n    const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n      \r\n      const config = {\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n      \r\n      const { data } = await axios.post(\r\n        `https://amoretto.pythonanywhere.com/api/profiles/profileitem/create/`,\r\n        {isVerified},\r\n        config\r\n      );\r\n      dispatch({\r\n        type: PROFILE_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n        dispatch({\r\n        type: PROFILE_CREATE_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message,\r\n        });\r\n        }\r\n        };\r\n\r\n        export const updateProfile = (profile) => async (dispatch, getState) => {\r\n            try {\r\n            dispatch({\r\n            type: PROFILE_UPDATE_REQUEST,\r\n            });\r\n            const {\r\n                userLogin: { userInfo },\r\n              } = getState();\r\n              \r\n              const config = {\r\n                headers: {\r\n                  'Content-type': 'application/json',\r\n                  Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n              };\r\n              \r\n              const { data } = await axios.put(\r\n                `https://amoretto.pythonanywhere.com/api/profiles/update/${profile._id}/`,\r\n                profile,\r\n                config\r\n              );\r\n              \r\n              dispatch({\r\n                type: PROFILE_UPDATE_SUCCESS,\r\n                payload: data,\r\n              });\r\n            } catch (error) {\r\n                dispatch({\r\n                type: PROFILE_UPDATE_FAIL,\r\n                payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n                });\r\n                }\r\n                };\r\n\r\n                export const createProfileReview = (profileId, review) => async (\r\n                    dispatch,\r\n                    getState\r\n                    ) => {\r\n                    try {\r\n                    dispatch({\r\n                    type: PROFILE_CREATE_REVIEW_REQUEST,\r\n                    });\r\n\r\n                    const {\r\n                        userLogin: { userInfo },\r\n                      } = getState();\r\n                      \r\n                      const config = {\r\n                        headers: {\r\n                          'Content-type': 'application/json',\r\n                          Authorization: `Bearer ${userInfo.token}`,\r\n                        },\r\n                      };\r\n                      \r\n                      await axios.post(`https://amoretto.pythonanywhere.com/api/profiles/${profileId}/reviews/create/`, review, config);\r\n                      \r\n                      dispatch({\r\n                        type: PROFILE_CREATE_REVIEW_SUCCESS,\r\n                      });\r\n                    } catch (error) {\r\n                        dispatch({\r\n                        type: PROFILE_CREATE_REVIEW_FAIL,\r\n                        payload: error.response && error.response.data.detail\r\n                        ? error.response.data.detail\r\n                        : error.message,\r\n                        });\r\n                        }\r\n                        };","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\ProfileStalk.js",["690"],"import React from 'react';\r\nimport { Card, Table } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ProfilesMessages({ profile }) {\r\n  return (\r\n    \r\n      <Table striped bordered hover>\r\n        <tbody>\r\n          <tr>\r\n            <td className='text-center'>\r\n        <Link  to={`/date/${profile._id}`} style={{ margin: '0 auto' }}>\r\n          <Card.Img src={profile.image} variant=\"top\" style={{ width: '250px', height: '250px', objectFit: 'cover', borderRadius: '15%' }} />\r\n        </Link>\r\n\r\n        <Link style={{ color: 'white', textDecoration: 'none', fontFamily: 'Segoe Script' }} to={`/date/${profile._id}`}>\r\n          <h3 as=\"h3\">\r\n            <strong>{profile.headline}</strong>\r\n          </h3>\r\n        </Link>\r\n            </td>\r\n         \r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n\r\n  );\r\n}\r\n\r\nexport default ProfilesMessages;\r\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\ProfilesMessages.js",["691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735"],"\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listProfileDetails } from '../actions/profileActions';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { useRef } from 'react';\r\nimport { createProfileReview } from '../actions/profileActions';\r\nimport { PROFILE_CREATE_REVIEW_RESET } from '../constants/profileConstants';\r\n\r\nimport ProfileMessages from '../components/ProfilesMessages';\r\n\r\n\r\nimport { updateHeart,deleteHeart } from '../actions/profileActions'\r\n\r\nimport { addHeartUser, getUserHeartlist } from '../actions/profileActions';\r\nimport {Table} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\n\r\nimport { HEART_UPDATE_RESET } from '../constants/profileConstants'\r\nimport { listProfiles } from '../actions/profileActions';\r\nfunction ProfilesMessages({ profile, history }) {\r\n\r\n    const dispatch = useDispatch();\r\n  \r\n\r\n\r\n\r\n  \r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    const [users, setUsers] = useState([]);\r\n    \r\n  \r\n    const heartList = useSelector((state) => state.heartList);\r\n    const { heartlist, error, loading } = heartList;\r\n  \r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n  \r\n  const profileList = useSelector(state => state.profileList);\r\n  const { error: profileError, loading: profileLoading, profiles, page: profilePage, pages: profilePages } = profileList;\r\n  \r\n \r\n\r\n  \r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState('')\r\n\r\n\r\n  const userDetails = useSelector(state => state.userDetails)\r\n  const { error: userDetailsError, loading: userDetailsLoading, user } = userDetails\r\n\r\n\r\n\r\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector(state => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n  useEffect(() => {\r\n      if (!userInfo) {\r\n          history.push('/login')\r\n      } else {\r\n          if (!user || !user.name || success || userInfo._id !== user._id) {\r\n              dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n              dispatch(getUserDetails('profile'))\r\n              dispatch(listMyOrders())\r\n          } else {\r\n              setName(user.name)\r\n              setEmail(user.email)\r\n          }\r\n      }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n  return (\r\n    <div>\r\n\r\n        <div>\r\n          <Row className=\"justify-content-center\">\r\n        \r\n  \r\n            <Col md={12}>\r\n              {profileLoading ? (\r\n                <Loader /> \r\n              ) : profileError ? ( \r\n                <Message variant='danger'>{profileError}</Message> \r\n              ) : ( \r\n                <>\r\n                  {profiles.map((profile) => {\r\n                        const matchingHeart = heartlist.find((heart) => heart.userHeart === profile.email);\r\n                    return (\r\n                      <div key={profile._id}>\r\n                \r\n\r\n                           {matchingHeart && (\r\n                          <div key={matchingHeart.id}>\r\n                            <Table striped bordered hover>\r\n                              \r\n        <tbody>\r\n          <tr>\r\n            {/* <td className='text-center'>\r\n        <Link  to={`/date/${profile._id}`} style={{ margin: '0 auto' }}>\r\n          <Card.Img src={profile.image} variant=\"top\" style={{ width: '150px', height: '150px', objectFit: 'cover', borderRadius: '15%' }} />\r\n        </Link>\r\n            </td> */}\r\n            <td className='text-center'>\r\n            <Link style={{ color: 'white', textDecoration: 'none', fontFamily: 'Segoe Script' }} to={`/date/${profile._id}`}>\r\n        \r\n        \r\n            {user.email === matchingHeart.userOwner ? (\r\n<h1>{matchingHeart.userHeart}</h1>\r\n) : (\r\n<h1>{matchingHeart.userOwner}</h1>\r\n)}\r\n\r\n\r\n\r\n        </Link>\r\n\r\n        <Link to={`/message/${profile._id}`} style={{ \r\n          backgroundColor: '#007bff',\r\n          color: 'white',\r\n          textDecoration: 'none',\r\n\r\n          borderRadius: '10px',\r\n          padding: '10px 20px',\r\n          marginTop: '10px',\r\n          display: 'inline-block',\r\n        }}>\r\n          Message\r\n        </Link>\r\n            </td>\r\n          \r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n\r\n                            <ListGroup.Item>\r\n                              <div>\r\n                                {/* put any content you want to display for the matching heart */}\r\n                              </div>\r\n                            </ListGroup.Item>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n \r\n    </div>\r\n    \r\n\r\n  );\r\n}\r\n\r\nexport default ProfilesMessages;\r\n","C:\\Users\\franc\\Desktop\\amoretto-frontend\\frontend\\src\\components\\ProductCarousel.js",[],{"ruleId":"736","replacedBy":"737"},{"ruleId":"738","replacedBy":"739"},{"ruleId":"740","severity":1,"message":"741","line":5,"column":8,"nodeType":"742","messageId":"743","endLine":5,"endColumn":17},{"ruleId":"740","severity":1,"message":"744","line":7,"column":10,"nodeType":"742","messageId":"743","endLine":7,"endColumn":16},{"ruleId":"740","severity":1,"message":"745","line":7,"column":18,"nodeType":"742","messageId":"743","endLine":7,"endColumn":27},{"ruleId":"740","severity":1,"message":"746","line":7,"column":29,"nodeType":"742","messageId":"743","endLine":7,"endColumn":43},{"ruleId":"740","severity":1,"message":"747","line":7,"column":53,"nodeType":"742","messageId":"743","endLine":7,"endColumn":60},{"ruleId":"740","severity":1,"message":"748","line":8,"column":10,"nodeType":"742","messageId":"743","endLine":8,"endColumn":24},{"ruleId":"740","severity":1,"message":"749","line":9,"column":10,"nodeType":"742","messageId":"743","endLine":9,"endColumn":18},{"ruleId":"740","severity":1,"message":"750","line":12,"column":10,"nodeType":"742","messageId":"743","endLine":12,"endColumn":13},{"ruleId":"740","severity":1,"message":"751","line":12,"column":20,"nodeType":"742","messageId":"743","endLine":12,"endColumn":25},{"ruleId":"740","severity":1,"message":"752","line":12,"column":38,"nodeType":"742","messageId":"743","endLine":12,"endColumn":44},{"ruleId":"740","severity":1,"message":"753","line":12,"column":46,"nodeType":"742","messageId":"743","endLine":12,"endColumn":50},{"ruleId":"740","severity":1,"message":"754","line":12,"column":52,"nodeType":"742","messageId":"743","endLine":12,"endColumn":56},{"ruleId":"740","severity":1,"message":"755","line":15,"column":10,"nodeType":"742","messageId":"743","endLine":15,"endColumn":17},{"ruleId":"740","severity":1,"message":"756","line":16,"column":10,"nodeType":"742","messageId":"743","endLine":16,"endColumn":25},{"ruleId":"740","severity":1,"message":"757","line":17,"column":10,"nodeType":"742","messageId":"743","endLine":17,"endColumn":23},{"ruleId":"740","severity":1,"message":"758","line":18,"column":10,"nodeType":"742","messageId":"743","endLine":18,"endColumn":28},{"ruleId":"740","severity":1,"message":"759","line":18,"column":30,"nodeType":"742","messageId":"743","endLine":18,"endColumn":49},{"ruleId":"740","severity":1,"message":"760","line":19,"column":10,"nodeType":"742","messageId":"743","endLine":19,"endColumn":37},{"ruleId":"740","severity":1,"message":"761","line":20,"column":10,"nodeType":"742","messageId":"743","endLine":20,"endColumn":20},{"ruleId":"740","severity":1,"message":"762","line":21,"column":10,"nodeType":"742","messageId":"743","endLine":21,"endColumn":16},{"ruleId":"740","severity":1,"message":"763","line":23,"column":10,"nodeType":"742","messageId":"743","endLine":23,"endColumn":14},{"ruleId":"740","severity":1,"message":"764","line":25,"column":10,"nodeType":"742","messageId":"743","endLine":25,"endColumn":24},{"ruleId":"740","severity":1,"message":"765","line":28,"column":10,"nodeType":"742","messageId":"743","endLine":28,"endColumn":21},{"ruleId":"740","severity":1,"message":"766","line":29,"column":10,"nodeType":"742","messageId":"743","endLine":29,"endColumn":30},{"ruleId":"740","severity":1,"message":"767","line":29,"column":32,"nodeType":"742","messageId":"743","endLine":29,"endColumn":52},{"ruleId":"740","severity":1,"message":"768","line":29,"column":54,"nodeType":"742","messageId":"743","endLine":29,"endColumn":71},{"ruleId":"740","severity":1,"message":"769","line":49,"column":18,"nodeType":"742","messageId":"743","endLine":49,"endColumn":25},{"ruleId":"740","severity":1,"message":"770","line":50,"column":19,"nodeType":"742","messageId":"743","endLine":50,"endColumn":27},{"ruleId":"740","severity":1,"message":"771","line":51,"column":22,"nodeType":"742","messageId":"743","endLine":51,"endColumn":33},{"ruleId":"740","severity":1,"message":"772","line":52,"column":29,"nodeType":"742","messageId":"743","endLine":52,"endColumn":47},{"ruleId":"740","severity":1,"message":"773","line":53,"column":12,"nodeType":"742","messageId":"743","endLine":53,"endColumn":19},{"ruleId":"740","severity":1,"message":"774","line":57,"column":13,"nodeType":"742","messageId":"743","endLine":57,"endColumn":18},{"ruleId":"740","severity":1,"message":"775","line":57,"column":20,"nodeType":"742","messageId":"743","endLine":57,"endColumn":27},{"ruleId":"740","severity":1,"message":"776","line":62,"column":13,"nodeType":"742","messageId":"743","endLine":62,"endColumn":20},{"ruleId":"740","severity":1,"message":"777","line":76,"column":11,"nodeType":"742","messageId":"743","endLine":76,"endColumn":24},{"ruleId":"778","severity":1,"message":"779","line":79,"column":22,"nodeType":"780","messageId":"781","endLine":79,"endColumn":24},{"ruleId":"740","severity":1,"message":"763","line":2,"column":10,"nodeType":"742","messageId":"743","endLine":2,"endColumn":14},{"ruleId":"778","severity":1,"message":"779","line":55,"column":22,"nodeType":"780","messageId":"781","endLine":55,"endColumn":24},{"ruleId":"740","severity":1,"message":"782","line":1,"column":27,"nodeType":"742","messageId":"743","endLine":1,"endColumn":36},{"ruleId":"783","severity":1,"message":"784","line":109,"column":17,"nodeType":"785","endLine":109,"endColumn":21},{"ruleId":"740","severity":1,"message":"786","line":1,"column":17,"nodeType":"742","messageId":"743","endLine":1,"endColumn":25},{"ruleId":"740","severity":1,"message":"787","line":8,"column":8,"nodeType":"742","messageId":"743","endLine":8,"endColumn":23},{"ruleId":"740","severity":1,"message":"751","line":4,"column":31,"nodeType":"742","messageId":"743","endLine":4,"endColumn":36},{"ruleId":"740","severity":1,"message":"754","line":4,"column":38,"nodeType":"742","messageId":"743","endLine":4,"endColumn":42},{"ruleId":"740","severity":1,"message":"782","line":1,"column":27,"nodeType":"742","messageId":"743","endLine":1,"endColumn":36},{"ruleId":"740","severity":1,"message":"786","line":1,"column":17,"nodeType":"742","messageId":"743","endLine":1,"endColumn":25},{"ruleId":"740","severity":1,"message":"751","line":4,"column":20,"nodeType":"742","messageId":"743","endLine":4,"endColumn":25},{"ruleId":"740","severity":1,"message":"754","line":4,"column":52,"nodeType":"742","messageId":"743","endLine":4,"endColumn":56},{"ruleId":"740","severity":1,"message":"788","line":4,"column":58,"nodeType":"742","messageId":"743","endLine":4,"endColumn":71},{"ruleId":"740","severity":1,"message":"789","line":5,"column":8,"nodeType":"742","messageId":"743","endLine":5,"endColumn":14},{"ruleId":"740","severity":1,"message":"759","line":8,"column":30,"nodeType":"742","messageId":"743","endLine":8,"endColumn":49},{"ruleId":"740","severity":1,"message":"755","line":10,"column":10,"nodeType":"742","messageId":"743","endLine":10,"endColumn":17},{"ruleId":"740","severity":1,"message":"756","line":11,"column":10,"nodeType":"742","messageId":"743","endLine":11,"endColumn":25},{"ruleId":"740","severity":1,"message":"790","line":12,"column":10,"nodeType":"742","messageId":"743","endLine":12,"endColumn":25},{"ruleId":"740","severity":1,"message":"791","line":12,"column":27,"nodeType":"742","messageId":"743","endLine":12,"endColumn":35},{"ruleId":"740","severity":1,"message":"792","line":12,"column":37,"nodeType":"742","messageId":"743","endLine":12,"endColumn":49},{"ruleId":"740","severity":1,"message":"793","line":13,"column":10,"nodeType":"742","messageId":"743","endLine":13,"endColumn":25},{"ruleId":"740","severity":1,"message":"794","line":13,"column":27,"nodeType":"742","messageId":"743","endLine":13,"endColumn":46},{"ruleId":"740","severity":1,"message":"795","line":14,"column":8,"nodeType":"742","messageId":"743","endLine":14,"endColumn":13},{"ruleId":"740","severity":1,"message":"796","line":18,"column":10,"nodeType":"742","messageId":"743","endLine":18,"endColumn":15},{"ruleId":"740","severity":1,"message":"797","line":19,"column":10,"nodeType":"742","messageId":"743","endLine":19,"endColumn":23},{"ruleId":"740","severity":1,"message":"798","line":24,"column":15,"nodeType":"742","messageId":"743","endLine":24,"endColumn":21},{"ruleId":"740","severity":1,"message":"799","line":25,"column":10,"nodeType":"742","messageId":"743","endLine":25,"endColumn":16},{"ruleId":"740","severity":1,"message":"800","line":26,"column":10,"nodeType":"742","messageId":"743","endLine":26,"endColumn":17},{"ruleId":"740","severity":1,"message":"801","line":27,"column":10,"nodeType":"742","messageId":"743","endLine":27,"endColumn":18},{"ruleId":"740","severity":1,"message":"802","line":27,"column":20,"nodeType":"742","messageId":"743","endLine":27,"endColumn":31},{"ruleId":"740","severity":1,"message":"803","line":28,"column":10,"nodeType":"742","messageId":"743","endLine":28,"endColumn":16},{"ruleId":"740","severity":1,"message":"804","line":28,"column":18,"nodeType":"742","messageId":"743","endLine":28,"endColumn":27},{"ruleId":"740","severity":1,"message":"805","line":29,"column":10,"nodeType":"742","messageId":"743","endLine":29,"endColumn":15},{"ruleId":"740","severity":1,"message":"806","line":29,"column":17,"nodeType":"742","messageId":"743","endLine":29,"endColumn":25},{"ruleId":"740","severity":1,"message":"807","line":30,"column":10,"nodeType":"742","messageId":"743","endLine":30,"endColumn":19},{"ruleId":"740","severity":1,"message":"808","line":30,"column":21,"nodeType":"742","messageId":"743","endLine":30,"endColumn":33},{"ruleId":"740","severity":1,"message":"809","line":32,"column":9,"nodeType":"742","messageId":"743","endLine":32,"endColumn":16},{"ruleId":"740","severity":1,"message":"810","line":36,"column":10,"nodeType":"742","messageId":"743","endLine":36,"endColumn":18},{"ruleId":"740","severity":1,"message":"811","line":36,"column":20,"nodeType":"742","messageId":"743","endLine":36,"endColumn":31},{"ruleId":"740","severity":1,"message":"812","line":42,"column":20,"nodeType":"742","messageId":"743","endLine":42,"endColumn":30},{"ruleId":"740","severity":1,"message":"813","line":42,"column":41,"nodeType":"742","messageId":"743","endLine":42,"endColumn":51},{"ruleId":"740","severity":1,"message":"814","line":45,"column":20,"nodeType":"742","messageId":"743","endLine":45,"endColumn":34},{"ruleId":"740","severity":1,"message":"815","line":45,"column":45,"nodeType":"742","messageId":"743","endLine":45,"endColumn":59},{"ruleId":"740","severity":1,"message":"816","line":52,"column":11,"nodeType":"742","messageId":"743","endLine":52,"endColumn":19},{"ruleId":"740","severity":1,"message":"817","line":57,"column":14,"nodeType":"742","messageId":"743","endLine":57,"endColumn":34},{"ruleId":"740","severity":1,"message":"818","line":58,"column":12,"nodeType":"742","messageId":"743","endLine":58,"endColumn":30},{"ruleId":"819","severity":1,"message":"820","line":77,"column":6,"nodeType":"821","endLine":77,"endColumn":16,"suggestions":"822"},{"ruleId":"740","severity":1,"message":"776","line":91,"column":11,"nodeType":"742","messageId":"743","endLine":91,"endColumn":18},{"ruleId":"819","severity":1,"message":"823","line":43,"column":8,"nodeType":"821","endLine":43,"endColumn":46,"suggestions":"824"},{"ruleId":"740","severity":1,"message":"752","line":2,"column":10,"nodeType":"742","messageId":"743","endLine":2,"endColumn":16},{"ruleId":"740","severity":1,"message":"751","line":2,"column":39,"nodeType":"742","messageId":"743","endLine":2,"endColumn":44},{"ruleId":"740","severity":1,"message":"763","line":3,"column":10,"nodeType":"742","messageId":"743","endLine":3,"endColumn":14},{"ruleId":"740","severity":1,"message":"814","line":25,"column":22,"nodeType":"742","messageId":"743","endLine":25,"endColumn":36},{"ruleId":"819","severity":1,"message":"825","line":65,"column":8,"nodeType":"821","endLine":65,"endColumn":62,"suggestions":"826"},{"ruleId":"740","severity":1,"message":"827","line":72,"column":11,"nodeType":"742","messageId":"743","endLine":72,"endColumn":25},{"ruleId":"740","severity":1,"message":"828","line":77,"column":11,"nodeType":"742","messageId":"743","endLine":77,"endColumn":19},{"ruleId":"778","severity":1,"message":"779","line":34,"column":22,"nodeType":"780","messageId":"781","endLine":34,"endColumn":24},{"ruleId":"740","severity":1,"message":"786","line":1,"column":17,"nodeType":"742","messageId":"743","endLine":1,"endColumn":25},{"ruleId":"740","severity":1,"message":"829","line":11,"column":26,"nodeType":"742","messageId":"743","endLine":11,"endColumn":43},{"ruleId":"740","severity":1,"message":"765","line":14,"column":10,"nodeType":"742","messageId":"743","endLine":14,"endColumn":21},{"ruleId":"740","severity":1,"message":"766","line":15,"column":10,"nodeType":"742","messageId":"743","endLine":15,"endColumn":30},{"ruleId":"740","severity":1,"message":"767","line":15,"column":32,"nodeType":"742","messageId":"743","endLine":15,"endColumn":52},{"ruleId":"740","severity":1,"message":"768","line":15,"column":54,"nodeType":"742","messageId":"743","endLine":15,"endColumn":71},{"ruleId":"740","severity":1,"message":"830","line":100,"column":8,"nodeType":"742","messageId":"743","endLine":100,"endColumn":12},{"ruleId":"740","severity":1,"message":"831","line":101,"column":8,"nodeType":"742","messageId":"743","endLine":101,"endColumn":13},{"ruleId":"740","severity":1,"message":"832","line":102,"column":8,"nodeType":"742","messageId":"743","endLine":102,"endColumn":16},{"ruleId":"740","severity":1,"message":"771","line":102,"column":18,"nodeType":"742","messageId":"743","endLine":102,"endColumn":29},{"ruleId":"740","severity":1,"message":"833","line":103,"column":8,"nodeType":"742","messageId":"743","endLine":103,"endColumn":23},{"ruleId":"740","severity":1,"message":"772","line":103,"column":25,"nodeType":"742","messageId":"743","endLine":103,"endColumn":43},{"ruleId":"740","severity":1,"message":"773","line":104,"column":8,"nodeType":"742","messageId":"743","endLine":104,"endColumn":15},{"ruleId":"740","severity":1,"message":"834","line":104,"column":17,"nodeType":"742","messageId":"743","endLine":104,"endColumn":27},{"ruleId":"740","severity":1,"message":"835","line":109,"column":16,"nodeType":"742","messageId":"743","endLine":109,"endColumn":25},{"ruleId":"740","severity":1,"message":"836","line":109,"column":36,"nodeType":"742","messageId":"743","endLine":109,"endColumn":47},{"ruleId":"740","severity":1,"message":"763","line":3,"column":10,"nodeType":"742","messageId":"743","endLine":3,"endColumn":14},{"ruleId":"740","severity":1,"message":"750","line":4,"column":10,"nodeType":"742","messageId":"743","endLine":4,"endColumn":13},{"ruleId":"740","severity":1,"message":"837","line":4,"column":15,"nodeType":"742","messageId":"743","endLine":4,"endColumn":18},{"ruleId":"740","severity":1,"message":"751","line":4,"column":20,"nodeType":"742","messageId":"743","endLine":4,"endColumn":25},{"ruleId":"740","severity":1,"message":"838","line":4,"column":27,"nodeType":"742","messageId":"743","endLine":4,"endColumn":36},{"ruleId":"740","severity":1,"message":"752","line":4,"column":38,"nodeType":"742","messageId":"743","endLine":4,"endColumn":44},{"ruleId":"740","severity":1,"message":"753","line":4,"column":46,"nodeType":"742","messageId":"743","endLine":4,"endColumn":50},{"ruleId":"740","severity":1,"message":"754","line":4,"column":52,"nodeType":"742","messageId":"743","endLine":4,"endColumn":56},{"ruleId":"740","severity":1,"message":"789","line":5,"column":8,"nodeType":"742","messageId":"743","endLine":5,"endColumn":14},{"ruleId":"740","severity":1,"message":"839","line":6,"column":8,"nodeType":"742","messageId":"743","endLine":6,"endColumn":14},{"ruleId":"740","severity":1,"message":"840","line":7,"column":8,"nodeType":"742","messageId":"743","endLine":7,"endColumn":15},{"ruleId":"740","severity":1,"message":"841","line":8,"column":10,"nodeType":"742","messageId":"743","endLine":8,"endColumn":28},{"ruleId":"740","severity":1,"message":"755","line":9,"column":10,"nodeType":"742","messageId":"743","endLine":9,"endColumn":17},{"ruleId":"740","severity":1,"message":"756","line":10,"column":10,"nodeType":"742","messageId":"743","endLine":10,"endColumn":25},{"ruleId":"740","severity":1,"message":"790","line":11,"column":10,"nodeType":"742","messageId":"743","endLine":11,"endColumn":25},{"ruleId":"740","severity":1,"message":"791","line":11,"column":27,"nodeType":"742","messageId":"743","endLine":11,"endColumn":35},{"ruleId":"740","severity":1,"message":"792","line":11,"column":37,"nodeType":"742","messageId":"743","endLine":11,"endColumn":49},{"ruleId":"740","severity":1,"message":"793","line":12,"column":10,"nodeType":"742","messageId":"743","endLine":12,"endColumn":25},{"ruleId":"740","severity":1,"message":"794","line":12,"column":27,"nodeType":"742","messageId":"743","endLine":12,"endColumn":46},{"ruleId":"740","severity":1,"message":"829","line":13,"column":26,"nodeType":"742","messageId":"743","endLine":13,"endColumn":43},{"ruleId":"740","severity":1,"message":"842","line":16,"column":10,"nodeType":"742","messageId":"743","endLine":16,"endColumn":18},{"ruleId":"740","severity":1,"message":"843","line":17,"column":10,"nodeType":"742","messageId":"743","endLine":17,"endColumn":16},{"ruleId":"740","severity":1,"message":"844","line":18,"column":10,"nodeType":"742","messageId":"743","endLine":18,"endColumn":29},{"ruleId":"740","severity":1,"message":"845","line":19,"column":10,"nodeType":"742","messageId":"743","endLine":19,"endColumn":37},{"ruleId":"740","severity":1,"message":"846","line":24,"column":10,"nodeType":"742","messageId":"743","endLine":24,"endColumn":21},{"ruleId":"740","severity":1,"message":"847","line":24,"column":22,"nodeType":"742","messageId":"743","endLine":24,"endColumn":33},{"ruleId":"740","severity":1,"message":"848","line":26,"column":10,"nodeType":"742","messageId":"743","endLine":26,"endColumn":22},{"ruleId":"740","severity":1,"message":"796","line":27,"column":9,"nodeType":"742","messageId":"743","endLine":27,"endColumn":14},{"ruleId":"740","severity":1,"message":"797","line":28,"column":10,"nodeType":"742","messageId":"743","endLine":28,"endColumn":23},{"ruleId":"740","severity":1,"message":"849","line":31,"column":10,"nodeType":"742","messageId":"743","endLine":31,"endColumn":28},{"ruleId":"740","severity":1,"message":"850","line":47,"column":14,"nodeType":"742","messageId":"743","endLine":47,"endColumn":19},{"ruleId":"740","severity":1,"message":"851","line":51,"column":15,"nodeType":"742","messageId":"743","endLine":51,"endColumn":24},{"ruleId":"740","severity":1,"message":"774","line":51,"column":26,"nodeType":"742","messageId":"743","endLine":51,"endColumn":31},{"ruleId":"740","severity":1,"message":"775","line":51,"column":33,"nodeType":"742","messageId":"743","endLine":51,"endColumn":40},{"ruleId":"740","severity":1,"message":"852","line":80,"column":20,"nodeType":"742","messageId":"743","endLine":80,"endColumn":32},{"ruleId":"740","severity":1,"message":"853","line":80,"column":43,"nodeType":"742","messageId":"743","endLine":80,"endColumn":57},{"ruleId":"740","severity":1,"message":"854","line":80,"column":59,"nodeType":"742","messageId":"743","endLine":80,"endColumn":67},{"ruleId":"740","severity":1,"message":"855","line":80,"column":75,"nodeType":"742","messageId":"743","endLine":80,"endColumn":86},{"ruleId":"740","severity":1,"message":"856","line":80,"column":95,"nodeType":"742","messageId":"743","endLine":80,"endColumn":107},{"ruleId":"740","severity":1,"message":"830","line":89,"column":12,"nodeType":"742","messageId":"743","endLine":89,"endColumn":16},{"ruleId":"740","severity":1,"message":"831","line":90,"column":12,"nodeType":"742","messageId":"743","endLine":90,"endColumn":17},{"ruleId":"740","severity":1,"message":"832","line":91,"column":12,"nodeType":"742","messageId":"743","endLine":91,"endColumn":20},{"ruleId":"740","severity":1,"message":"771","line":91,"column":22,"nodeType":"742","messageId":"743","endLine":91,"endColumn":33},{"ruleId":"740","severity":1,"message":"833","line":92,"column":12,"nodeType":"742","messageId":"743","endLine":92,"endColumn":27},{"ruleId":"740","severity":1,"message":"772","line":92,"column":29,"nodeType":"742","messageId":"743","endLine":92,"endColumn":47},{"ruleId":"740","severity":1,"message":"773","line":93,"column":12,"nodeType":"742","messageId":"743","endLine":93,"endColumn":19},{"ruleId":"740","severity":1,"message":"834","line":93,"column":21,"nodeType":"742","messageId":"743","endLine":93,"endColumn":31},{"ruleId":"740","severity":1,"message":"857","line":97,"column":20,"nodeType":"742","messageId":"743","endLine":97,"endColumn":36},{"ruleId":"740","severity":1,"message":"858","line":97,"column":47,"nodeType":"742","messageId":"743","endLine":97,"endColumn":65},{"ruleId":"740","severity":1,"message":"859","line":105,"column":22,"nodeType":"742","messageId":"743","endLine":105,"endColumn":35},{"ruleId":"740","severity":1,"message":"860","line":105,"column":44,"nodeType":"742","messageId":"743","endLine":105,"endColumn":55},{"ruleId":"740","severity":1,"message":"861","line":105,"column":57,"nodeType":"742","messageId":"743","endLine":105,"endColumn":63},{"ruleId":"740","severity":1,"message":"786","line":1,"column":17,"nodeType":"742","messageId":"743","endLine":1,"endColumn":25},{"ruleId":"740","severity":1,"message":"751","line":2,"column":39,"nodeType":"742","messageId":"743","endLine":2,"endColumn":44},{"ruleId":"740","severity":1,"message":"763","line":3,"column":10,"nodeType":"742","messageId":"743","endLine":3,"endColumn":14},{"ruleId":"819","severity":1,"message":"862","line":35,"column":8,"nodeType":"821","endLine":35,"endColumn":26,"suggestions":"863"},{"ruleId":"740","severity":1,"message":"763","line":3,"column":10,"nodeType":"742","messageId":"743","endLine":3,"endColumn":14},{"ruleId":"740","severity":1,"message":"751","line":4,"column":20,"nodeType":"742","messageId":"743","endLine":4,"endColumn":25},{"ruleId":"740","severity":1,"message":"752","line":4,"column":38,"nodeType":"742","messageId":"743","endLine":4,"endColumn":44},{"ruleId":"740","severity":1,"message":"753","line":4,"column":46,"nodeType":"742","messageId":"743","endLine":4,"endColumn":50},{"ruleId":"740","severity":1,"message":"754","line":4,"column":52,"nodeType":"742","messageId":"743","endLine":4,"endColumn":56},{"ruleId":"740","severity":1,"message":"789","line":5,"column":8,"nodeType":"742","messageId":"743","endLine":5,"endColumn":14},{"ruleId":"740","severity":1,"message":"841","line":8,"column":10,"nodeType":"742","messageId":"743","endLine":8,"endColumn":28},{"ruleId":"740","severity":1,"message":"755","line":9,"column":10,"nodeType":"742","messageId":"743","endLine":9,"endColumn":17},{"ruleId":"740","severity":1,"message":"756","line":10,"column":10,"nodeType":"742","messageId":"743","endLine":10,"endColumn":25},{"ruleId":"740","severity":1,"message":"790","line":11,"column":10,"nodeType":"742","messageId":"743","endLine":11,"endColumn":25},{"ruleId":"740","severity":1,"message":"791","line":11,"column":27,"nodeType":"742","messageId":"743","endLine":11,"endColumn":35},{"ruleId":"740","severity":1,"message":"792","line":11,"column":37,"nodeType":"742","messageId":"743","endLine":11,"endColumn":49},{"ruleId":"740","severity":1,"message":"793","line":12,"column":10,"nodeType":"742","messageId":"743","endLine":12,"endColumn":25},{"ruleId":"740","severity":1,"message":"794","line":12,"column":27,"nodeType":"742","messageId":"743","endLine":12,"endColumn":46},{"ruleId":"740","severity":1,"message":"829","line":13,"column":26,"nodeType":"742","messageId":"743","endLine":13,"endColumn":43},{"ruleId":"740","severity":1,"message":"842","line":16,"column":10,"nodeType":"742","messageId":"743","endLine":16,"endColumn":18},{"ruleId":"740","severity":1,"message":"843","line":17,"column":10,"nodeType":"742","messageId":"743","endLine":17,"endColumn":16},{"ruleId":"740","severity":1,"message":"844","line":18,"column":10,"nodeType":"742","messageId":"743","endLine":18,"endColumn":29},{"ruleId":"740","severity":1,"message":"845","line":19,"column":10,"nodeType":"742","messageId":"743","endLine":19,"endColumn":37},{"ruleId":"740","severity":1,"message":"846","line":24,"column":10,"nodeType":"742","messageId":"743","endLine":24,"endColumn":21},{"ruleId":"740","severity":1,"message":"847","line":24,"column":22,"nodeType":"742","messageId":"743","endLine":24,"endColumn":33},{"ruleId":"740","severity":1,"message":"848","line":26,"column":10,"nodeType":"742","messageId":"743","endLine":26,"endColumn":22},{"ruleId":"740","severity":1,"message":"796","line":27,"column":9,"nodeType":"742","messageId":"743","endLine":27,"endColumn":14},{"ruleId":"740","severity":1,"message":"797","line":28,"column":10,"nodeType":"742","messageId":"743","endLine":28,"endColumn":23},{"ruleId":"740","severity":1,"message":"849","line":31,"column":10,"nodeType":"742","messageId":"743","endLine":31,"endColumn":28},{"ruleId":"740","severity":1,"message":"850","line":47,"column":14,"nodeType":"742","messageId":"743","endLine":47,"endColumn":19},{"ruleId":"740","severity":1,"message":"855","line":80,"column":75,"nodeType":"742","messageId":"743","endLine":80,"endColumn":86},{"ruleId":"740","severity":1,"message":"856","line":80,"column":95,"nodeType":"742","messageId":"743","endLine":80,"endColumn":107},{"ruleId":"740","severity":1,"message":"830","line":90,"column":12,"nodeType":"742","messageId":"743","endLine":90,"endColumn":16},{"ruleId":"740","severity":1,"message":"831","line":91,"column":12,"nodeType":"742","messageId":"743","endLine":91,"endColumn":17},{"ruleId":"740","severity":1,"message":"832","line":92,"column":12,"nodeType":"742","messageId":"743","endLine":92,"endColumn":20},{"ruleId":"740","severity":1,"message":"771","line":92,"column":22,"nodeType":"742","messageId":"743","endLine":92,"endColumn":33},{"ruleId":"740","severity":1,"message":"833","line":93,"column":12,"nodeType":"742","messageId":"743","endLine":93,"endColumn":27},{"ruleId":"740","severity":1,"message":"772","line":93,"column":29,"nodeType":"742","messageId":"743","endLine":93,"endColumn":47},{"ruleId":"740","severity":1,"message":"773","line":94,"column":12,"nodeType":"742","messageId":"743","endLine":94,"endColumn":19},{"ruleId":"740","severity":1,"message":"834","line":94,"column":21,"nodeType":"742","messageId":"743","endLine":94,"endColumn":31},{"ruleId":"740","severity":1,"message":"857","line":98,"column":20,"nodeType":"742","messageId":"743","endLine":98,"endColumn":36},{"ruleId":"740","severity":1,"message":"858","line":98,"column":47,"nodeType":"742","messageId":"743","endLine":98,"endColumn":65},{"ruleId":"740","severity":1,"message":"859","line":106,"column":22,"nodeType":"742","messageId":"743","endLine":106,"endColumn":35},{"ruleId":"740","severity":1,"message":"860","line":106,"column":44,"nodeType":"742","messageId":"743","endLine":106,"endColumn":55},{"ruleId":"740","severity":1,"message":"861","line":106,"column":57,"nodeType":"742","messageId":"743","endLine":106,"endColumn":63},{"ruleId":"740","severity":1,"message":"795","line":2,"column":8,"nodeType":"742","messageId":"743","endLine":2,"endColumn":13},{"ruleId":"740","severity":1,"message":"864","line":9,"column":10,"nodeType":"742","messageId":"743","endLine":9,"endColumn":26},{"ruleId":"740","severity":1,"message":"847","line":9,"column":41,"nodeType":"742","messageId":"743","endLine":9,"endColumn":52},{"ruleId":"740","severity":1,"message":"764","line":11,"column":10,"nodeType":"742","messageId":"743","endLine":11,"endColumn":24},{"ruleId":"740","severity":1,"message":"829","line":11,"column":26,"nodeType":"742","messageId":"743","endLine":11,"endColumn":43},{"ruleId":"740","severity":1,"message":"865","line":12,"column":10,"nodeType":"742","messageId":"743","endLine":12,"endColumn":35},{"ruleId":"740","severity":1,"message":"866","line":13,"column":10,"nodeType":"742","messageId":"743","endLine":13,"endColumn":22},{"ruleId":"740","severity":1,"message":"765","line":14,"column":10,"nodeType":"742","messageId":"743","endLine":14,"endColumn":21},{"ruleId":"740","severity":1,"message":"766","line":16,"column":3,"nodeType":"742","messageId":"743","endLine":16,"endColumn":23},{"ruleId":"740","severity":1,"message":"767","line":17,"column":3,"nodeType":"742","messageId":"743","endLine":17,"endColumn":23},{"ruleId":"740","severity":1,"message":"768","line":18,"column":3,"nodeType":"742","messageId":"743","endLine":18,"endColumn":20},{"ruleId":"740","severity":1,"message":"752","line":4,"column":38,"nodeType":"742","messageId":"743","endLine":4,"endColumn":44},{"ruleId":"740","severity":1,"message":"754","line":4,"column":52,"nodeType":"742","messageId":"743","endLine":4,"endColumn":56},{"ruleId":"740","severity":1,"message":"789","line":5,"column":8,"nodeType":"742","messageId":"743","endLine":5,"endColumn":14},{"ruleId":"740","severity":1,"message":"755","line":9,"column":10,"nodeType":"742","messageId":"743","endLine":9,"endColumn":17},{"ruleId":"740","severity":1,"message":"756","line":10,"column":10,"nodeType":"742","messageId":"743","endLine":10,"endColumn":25},{"ruleId":"740","severity":1,"message":"790","line":11,"column":10,"nodeType":"742","messageId":"743","endLine":11,"endColumn":25},{"ruleId":"740","severity":1,"message":"791","line":11,"column":27,"nodeType":"742","messageId":"743","endLine":11,"endColumn":35},{"ruleId":"740","severity":1,"message":"792","line":11,"column":37,"nodeType":"742","messageId":"743","endLine":11,"endColumn":49},{"ruleId":"740","severity":1,"message":"793","line":12,"column":10,"nodeType":"742","messageId":"743","endLine":12,"endColumn":25},{"ruleId":"740","severity":1,"message":"794","line":12,"column":27,"nodeType":"742","messageId":"743","endLine":12,"endColumn":46},{"ruleId":"740","severity":1,"message":"829","line":13,"column":26,"nodeType":"742","messageId":"743","endLine":13,"endColumn":43},{"ruleId":"740","severity":1,"message":"842","line":16,"column":10,"nodeType":"742","messageId":"743","endLine":16,"endColumn":18},{"ruleId":"740","severity":1,"message":"843","line":17,"column":10,"nodeType":"742","messageId":"743","endLine":17,"endColumn":16},{"ruleId":"740","severity":1,"message":"798","line":27,"column":15,"nodeType":"742","messageId":"743","endLine":27,"endColumn":21},{"ruleId":"740","severity":1,"message":"867","line":28,"column":10,"nodeType":"742","messageId":"743","endLine":28,"endColumn":15},{"ruleId":"740","severity":1,"message":"801","line":39,"column":10,"nodeType":"742","messageId":"743","endLine":39,"endColumn":18},{"ruleId":"740","severity":1,"message":"802","line":39,"column":20,"nodeType":"742","messageId":"743","endLine":39,"endColumn":31},{"ruleId":"740","severity":1,"message":"868","line":49,"column":14,"nodeType":"742","messageId":"743","endLine":49,"endColumn":34},{"ruleId":"740","severity":1,"message":"869","line":50,"column":12,"nodeType":"742","messageId":"743","endLine":50,"endColumn":30},{"ruleId":"740","severity":1,"message":"777","line":65,"column":9,"nodeType":"742","messageId":"743","endLine":65,"endColumn":22},{"ruleId":"740","severity":1,"message":"870","line":79,"column":9,"nodeType":"742","messageId":"743","endLine":79,"endColumn":25},{"ruleId":"740","severity":1,"message":"871","line":83,"column":9,"nodeType":"742","messageId":"743","endLine":83,"endColumn":22},{"ruleId":"740","severity":1,"message":"872","line":89,"column":9,"nodeType":"742","messageId":"743","endLine":89,"endColumn":22},{"ruleId":"740","severity":1,"message":"873","line":94,"column":10,"nodeType":"742","messageId":"743","endLine":94,"endColumn":21},{"ruleId":"740","severity":1,"message":"874","line":94,"column":23,"nodeType":"742","messageId":"743","endLine":94,"endColumn":37},{"ruleId":"740","severity":1,"message":"830","line":97,"column":10,"nodeType":"742","messageId":"743","endLine":97,"endColumn":14},{"ruleId":"740","severity":1,"message":"831","line":98,"column":12,"nodeType":"742","messageId":"743","endLine":98,"endColumn":17},{"ruleId":"740","severity":1,"message":"832","line":99,"column":12,"nodeType":"742","messageId":"743","endLine":99,"endColumn":20},{"ruleId":"740","severity":1,"message":"771","line":99,"column":22,"nodeType":"742","messageId":"743","endLine":99,"endColumn":33},{"ruleId":"740","severity":1,"message":"833","line":100,"column":12,"nodeType":"742","messageId":"743","endLine":100,"endColumn":27},{"ruleId":"740","severity":1,"message":"772","line":100,"column":29,"nodeType":"742","messageId":"743","endLine":100,"endColumn":47},{"ruleId":"740","severity":1,"message":"773","line":101,"column":12,"nodeType":"742","messageId":"743","endLine":101,"endColumn":19},{"ruleId":"740","severity":1,"message":"834","line":101,"column":21,"nodeType":"742","messageId":"743","endLine":101,"endColumn":31},{"ruleId":"740","severity":1,"message":"859","line":114,"column":22,"nodeType":"742","messageId":"743","endLine":114,"endColumn":35},{"ruleId":"740","severity":1,"message":"860","line":114,"column":44,"nodeType":"742","messageId":"743","endLine":114,"endColumn":55},{"ruleId":"740","severity":1,"message":"861","line":114,"column":57,"nodeType":"742","messageId":"743","endLine":114,"endColumn":63},{"ruleId":"740","severity":1,"message":"875","line":116,"column":12,"nodeType":"742","messageId":"743","endLine":116,"endColumn":24},{"ruleId":"740","severity":1,"message":"876","line":116,"column":26,"nodeType":"742","messageId":"743","endLine":116,"endColumn":41},{"ruleId":"740","severity":1,"message":"877","line":132,"column":11,"nodeType":"742","messageId":"743","endLine":132,"endColumn":31},{"ruleId":"740","severity":1,"message":"878","line":136,"column":11,"nodeType":"742","messageId":"743","endLine":136,"endColumn":24},{"ruleId":"740","severity":1,"message":"828","line":139,"column":11,"nodeType":"742","messageId":"743","endLine":139,"endColumn":19},{"ruleId":"740","severity":1,"message":"751","line":4,"column":20,"nodeType":"742","messageId":"743","endLine":4,"endColumn":25},{"ruleId":"740","severity":1,"message":"789","line":5,"column":8,"nodeType":"742","messageId":"743","endLine":5,"endColumn":14},{"ruleId":"740","severity":1,"message":"755","line":9,"column":10,"nodeType":"742","messageId":"743","endLine":9,"endColumn":17},{"ruleId":"740","severity":1,"message":"756","line":10,"column":10,"nodeType":"742","messageId":"743","endLine":10,"endColumn":25},{"ruleId":"740","severity":1,"message":"790","line":11,"column":10,"nodeType":"742","messageId":"743","endLine":11,"endColumn":25},{"ruleId":"740","severity":1,"message":"791","line":11,"column":27,"nodeType":"742","messageId":"743","endLine":11,"endColumn":35},{"ruleId":"740","severity":1,"message":"792","line":11,"column":37,"nodeType":"742","messageId":"743","endLine":11,"endColumn":49},{"ruleId":"740","severity":1,"message":"793","line":12,"column":10,"nodeType":"742","messageId":"743","endLine":12,"endColumn":25},{"ruleId":"740","severity":1,"message":"794","line":12,"column":27,"nodeType":"742","messageId":"743","endLine":12,"endColumn":46},{"ruleId":"740","severity":1,"message":"829","line":13,"column":26,"nodeType":"742","messageId":"743","endLine":13,"endColumn":43},{"ruleId":"740","severity":1,"message":"842","line":16,"column":10,"nodeType":"742","messageId":"743","endLine":16,"endColumn":18},{"ruleId":"740","severity":1,"message":"843","line":17,"column":10,"nodeType":"742","messageId":"743","endLine":17,"endColumn":16},{"ruleId":"740","severity":1,"message":"796","line":26,"column":9,"nodeType":"742","messageId":"743","endLine":26,"endColumn":14},{"ruleId":"740","severity":1,"message":"797","line":27,"column":10,"nodeType":"742","messageId":"743","endLine":27,"endColumn":23},{"ruleId":"740","severity":1,"message":"798","line":38,"column":15,"nodeType":"742","messageId":"743","endLine":38,"endColumn":21},{"ruleId":"740","severity":1,"message":"867","line":39,"column":10,"nodeType":"742","messageId":"743","endLine":39,"endColumn":15},{"ruleId":"740","severity":1,"message":"879","line":44,"column":28,"nodeType":"742","messageId":"743","endLine":44,"endColumn":47},{"ruleId":"740","severity":1,"message":"880","line":44,"column":58,"nodeType":"742","messageId":"743","endLine":44,"endColumn":79},{"ruleId":"740","severity":1,"message":"801","line":50,"column":10,"nodeType":"742","messageId":"743","endLine":50,"endColumn":18},{"ruleId":"740","severity":1,"message":"802","line":50,"column":20,"nodeType":"742","messageId":"743","endLine":50,"endColumn":31},{"ruleId":"740","severity":1,"message":"870","line":84,"column":9,"nodeType":"742","messageId":"743","endLine":84,"endColumn":25},{"ruleId":"740","severity":1,"message":"871","line":88,"column":9,"nodeType":"742","messageId":"743","endLine":88,"endColumn":22},{"ruleId":"740","severity":1,"message":"872","line":94,"column":9,"nodeType":"742","messageId":"743","endLine":94,"endColumn":22},{"ruleId":"740","severity":1,"message":"873","line":99,"column":10,"nodeType":"742","messageId":"743","endLine":99,"endColumn":21},{"ruleId":"740","severity":1,"message":"874","line":99,"column":23,"nodeType":"742","messageId":"743","endLine":99,"endColumn":37},{"ruleId":"740","severity":1,"message":"830","line":102,"column":10,"nodeType":"742","messageId":"743","endLine":102,"endColumn":14},{"ruleId":"740","severity":1,"message":"831","line":103,"column":12,"nodeType":"742","messageId":"743","endLine":103,"endColumn":17},{"ruleId":"740","severity":1,"message":"832","line":104,"column":12,"nodeType":"742","messageId":"743","endLine":104,"endColumn":20},{"ruleId":"740","severity":1,"message":"771","line":104,"column":22,"nodeType":"742","messageId":"743","endLine":104,"endColumn":33},{"ruleId":"740","severity":1,"message":"833","line":105,"column":12,"nodeType":"742","messageId":"743","endLine":105,"endColumn":27},{"ruleId":"740","severity":1,"message":"772","line":105,"column":29,"nodeType":"742","messageId":"743","endLine":105,"endColumn":47},{"ruleId":"740","severity":1,"message":"773","line":106,"column":12,"nodeType":"742","messageId":"743","endLine":106,"endColumn":19},{"ruleId":"740","severity":1,"message":"834","line":106,"column":21,"nodeType":"742","messageId":"743","endLine":106,"endColumn":31},{"ruleId":"740","severity":1,"message":"859","line":119,"column":22,"nodeType":"742","messageId":"743","endLine":119,"endColumn":35},{"ruleId":"740","severity":1,"message":"860","line":119,"column":44,"nodeType":"742","messageId":"743","endLine":119,"endColumn":55},{"ruleId":"740","severity":1,"message":"861","line":119,"column":57,"nodeType":"742","messageId":"743","endLine":119,"endColumn":63},{"ruleId":"740","severity":1,"message":"875","line":121,"column":12,"nodeType":"742","messageId":"743","endLine":121,"endColumn":24},{"ruleId":"740","severity":1,"message":"876","line":121,"column":26,"nodeType":"742","messageId":"743","endLine":121,"endColumn":41},{"ruleId":"740","severity":1,"message":"877","line":137,"column":11,"nodeType":"742","messageId":"743","endLine":137,"endColumn":31},{"ruleId":"740","severity":1,"message":"878","line":141,"column":11,"nodeType":"742","messageId":"743","endLine":141,"endColumn":24},{"ruleId":"740","severity":1,"message":"828","line":144,"column":11,"nodeType":"742","messageId":"743","endLine":144,"endColumn":19},{"ruleId":"740","severity":1,"message":"881","line":152,"column":11,"nodeType":"742","messageId":"743","endLine":152,"endColumn":22},{"ruleId":"740","severity":1,"message":"882","line":154,"column":12,"nodeType":"742","messageId":"743","endLine":154,"endColumn":19},{"ruleId":"740","severity":1,"message":"883","line":155,"column":26,"nodeType":"742","messageId":"743","endLine":155,"endColumn":41},{"ruleId":"740","severity":1,"message":"884","line":156,"column":21,"nodeType":"742","messageId":"743","endLine":156,"endColumn":31},{"ruleId":"740","severity":1,"message":"885","line":157,"column":24,"nodeType":"742","messageId":"743","endLine":157,"endColumn":37},{"ruleId":"740","severity":1,"message":"850","line":158,"column":12,"nodeType":"742","messageId":"743","endLine":158,"endColumn":17},{"ruleId":"740","severity":1,"message":"886","line":165,"column":22,"nodeType":"742","messageId":"743","endLine":165,"endColumn":35},{"ruleId":"740","severity":1,"message":"887","line":165,"column":44,"nodeType":"742","messageId":"743","endLine":165,"endColumn":55},{"ruleId":"740","severity":1,"message":"888","line":171,"column":11,"nodeType":"742","messageId":"743","endLine":171,"endColumn":27},{"ruleId":"740","severity":1,"message":"889","line":201,"column":20,"nodeType":"742","messageId":"743","endLine":201,"endColumn":31},{"ruleId":"740","severity":1,"message":"890","line":201,"column":42,"nodeType":"742","messageId":"743","endLine":201,"endColumn":55},{"ruleId":"740","severity":1,"message":"891","line":218,"column":9,"nodeType":"742","messageId":"743","endLine":218,"endColumn":26},{"ruleId":"740","severity":1,"message":"892","line":224,"column":9,"nodeType":"742","messageId":"743","endLine":224,"endColumn":24},{"ruleId":"740","severity":1,"message":"893","line":229,"column":11,"nodeType":"742","messageId":"743","endLine":229,"endColumn":24},{"ruleId":"740","severity":1,"message":"852","line":237,"column":18,"nodeType":"742","messageId":"743","endLine":237,"endColumn":30},{"ruleId":"740","severity":1,"message":"853","line":237,"column":41,"nodeType":"742","messageId":"743","endLine":237,"endColumn":55},{"ruleId":"740","severity":1,"message":"854","line":237,"column":57,"nodeType":"742","messageId":"743","endLine":237,"endColumn":65},{"ruleId":"740","severity":1,"message":"855","line":237,"column":73,"nodeType":"742","messageId":"743","endLine":237,"endColumn":84},{"ruleId":"740","severity":1,"message":"856","line":237,"column":93,"nodeType":"742","messageId":"743","endLine":237,"endColumn":105},{"ruleId":"740","severity":1,"message":"754","line":5,"column":10,"nodeType":"742","messageId":"743","endLine":5,"endColumn":14},{"ruleId":"740","severity":1,"message":"829","line":9,"column":26,"nodeType":"742","messageId":"743","endLine":9,"endColumn":43},{"ruleId":"740","severity":1,"message":"865","line":10,"column":10,"nodeType":"742","messageId":"743","endLine":10,"endColumn":35},{"ruleId":"740","severity":1,"message":"841","line":12,"column":10,"nodeType":"742","messageId":"743","endLine":12,"endColumn":28},{"ruleId":"740","severity":1,"message":"881","line":18,"column":9,"nodeType":"742","messageId":"743","endLine":18,"endColumn":20},{"ruleId":"740","severity":1,"message":"882","line":20,"column":10,"nodeType":"742","messageId":"743","endLine":20,"endColumn":17},{"ruleId":"740","severity":1,"message":"884","line":21,"column":19,"nodeType":"742","messageId":"743","endLine":21,"endColumn":29},{"ruleId":"740","severity":1,"message":"885","line":22,"column":22,"nodeType":"742","messageId":"743","endLine":22,"endColumn":35},{"ruleId":"740","severity":1,"message":"850","line":23,"column":10,"nodeType":"742","messageId":"743","endLine":23,"endColumn":15},{"ruleId":"740","severity":1,"message":"830","line":25,"column":10,"nodeType":"742","messageId":"743","endLine":25,"endColumn":14},{"ruleId":"740","severity":1,"message":"769","line":25,"column":16,"nodeType":"742","messageId":"743","endLine":25,"endColumn":23},{"ruleId":"740","severity":1,"message":"831","line":26,"column":12,"nodeType":"742","messageId":"743","endLine":26,"endColumn":17},{"ruleId":"740","severity":1,"message":"770","line":26,"column":19,"nodeType":"742","messageId":"743","endLine":26,"endColumn":27},{"ruleId":"740","severity":1,"message":"832","line":27,"column":12,"nodeType":"742","messageId":"743","endLine":27,"endColumn":20},{"ruleId":"740","severity":1,"message":"771","line":27,"column":22,"nodeType":"742","messageId":"743","endLine":27,"endColumn":33},{"ruleId":"740","severity":1,"message":"833","line":28,"column":12,"nodeType":"742","messageId":"743","endLine":28,"endColumn":27},{"ruleId":"740","severity":1,"message":"772","line":28,"column":29,"nodeType":"742","messageId":"743","endLine":28,"endColumn":47},{"ruleId":"740","severity":1,"message":"773","line":29,"column":12,"nodeType":"742","messageId":"743","endLine":29,"endColumn":19},{"ruleId":"740","severity":1,"message":"834","line":29,"column":21,"nodeType":"742","messageId":"743","endLine":29,"endColumn":31},{"ruleId":"740","severity":1,"message":"835","line":37,"column":18,"nodeType":"742","messageId":"743","endLine":37,"endColumn":27},{"ruleId":"740","severity":1,"message":"836","line":37,"column":38,"nodeType":"742","messageId":"743","endLine":37,"endColumn":49},{"ruleId":"740","severity":1,"message":"894","line":40,"column":65,"nodeType":"742","messageId":"743","endLine":40,"endColumn":69},{"ruleId":"740","severity":1,"message":"889","line":82,"column":18,"nodeType":"742","messageId":"743","endLine":82,"endColumn":29},{"ruleId":"740","severity":1,"message":"890","line":82,"column":40,"nodeType":"742","messageId":"743","endLine":82,"endColumn":53},{"ruleId":"740","severity":1,"message":"891","line":99,"column":7,"nodeType":"742","messageId":"743","endLine":99,"endColumn":24},{"ruleId":"740","severity":1,"message":"892","line":105,"column":7,"nodeType":"742","messageId":"743","endLine":105,"endColumn":22},{"ruleId":"740","severity":1,"message":"852","line":118,"column":16,"nodeType":"742","messageId":"743","endLine":118,"endColumn":28},{"ruleId":"740","severity":1,"message":"853","line":118,"column":39,"nodeType":"742","messageId":"743","endLine":118,"endColumn":53},{"ruleId":"740","severity":1,"message":"855","line":118,"column":71,"nodeType":"742","messageId":"743","endLine":118,"endColumn":82},{"ruleId":"740","severity":1,"message":"856","line":118,"column":91,"nodeType":"742","messageId":"743","endLine":118,"endColumn":103},{"ruleId":"740","severity":1,"message":"895","line":8,"column":27,"nodeType":"742","messageId":"743","endLine":8,"endColumn":38},{"ruleId":"740","severity":1,"message":"829","line":12,"column":26,"nodeType":"742","messageId":"743","endLine":12,"endColumn":43},{"ruleId":"740","severity":1,"message":"896","line":60,"column":20,"nodeType":"742","messageId":"743","endLine":60,"endColumn":33},{"ruleId":"740","severity":1,"message":"830","line":63,"column":8,"nodeType":"742","messageId":"743","endLine":63,"endColumn":12},{"ruleId":"740","severity":1,"message":"831","line":64,"column":8,"nodeType":"742","messageId":"743","endLine":64,"endColumn":13},{"ruleId":"740","severity":1,"message":"832","line":65,"column":8,"nodeType":"742","messageId":"743","endLine":65,"endColumn":16},{"ruleId":"740","severity":1,"message":"771","line":65,"column":18,"nodeType":"742","messageId":"743","endLine":65,"endColumn":29},{"ruleId":"740","severity":1,"message":"833","line":66,"column":8,"nodeType":"742","messageId":"743","endLine":66,"endColumn":23},{"ruleId":"740","severity":1,"message":"772","line":66,"column":25,"nodeType":"742","messageId":"743","endLine":66,"endColumn":43},{"ruleId":"740","severity":1,"message":"773","line":67,"column":8,"nodeType":"742","messageId":"743","endLine":67,"endColumn":15},{"ruleId":"740","severity":1,"message":"834","line":67,"column":17,"nodeType":"742","messageId":"743","endLine":67,"endColumn":27},{"ruleId":"740","severity":1,"message":"786","line":1,"column":17,"nodeType":"742","messageId":"743","endLine":1,"endColumn":25},{"ruleId":"740","severity":1,"message":"786","line":1,"column":17,"nodeType":"742","messageId":"743","endLine":1,"endColumn":25},{"ruleId":"740","severity":1,"message":"750","line":9,"column":10,"nodeType":"742","messageId":"743","endLine":9,"endColumn":13},{"ruleId":"740","severity":1,"message":"837","line":9,"column":15,"nodeType":"742","messageId":"743","endLine":9,"endColumn":18},{"ruleId":"740","severity":1,"message":"897","line":12,"column":8,"nodeType":"742","messageId":"743","endLine":12,"endColumn":23},{"ruleId":"740","severity":1,"message":"741","line":13,"column":8,"nodeType":"742","messageId":"743","endLine":13,"endColumn":17},{"ruleId":"740","severity":1,"message":"777","line":26,"column":9,"nodeType":"742","messageId":"743","endLine":26,"endColumn":22},{"ruleId":"740","severity":1,"message":"898","line":24,"column":12,"nodeType":"742","messageId":"743","endLine":24,"endColumn":21},{"ruleId":"740","severity":1,"message":"899","line":29,"column":12,"nodeType":"742","messageId":"743","endLine":29,"endColumn":29},{"ruleId":"740","severity":1,"message":"900","line":82,"column":11,"nodeType":"742","messageId":"743","endLine":82,"endColumn":28},{"ruleId":"740","severity":1,"message":"901","line":109,"column":11,"nodeType":"742","messageId":"743","endLine":109,"endColumn":32},{"ruleId":"740","severity":1,"message":"752","line":2,"column":10,"nodeType":"742","messageId":"743","endLine":2,"endColumn":16},{"ruleId":"740","severity":1,"message":"789","line":3,"column":8,"nodeType":"742","messageId":"743","endLine":3,"endColumn":14},{"ruleId":"740","severity":1,"message":"789","line":2,"column":8,"nodeType":"742","messageId":"743","endLine":2,"endColumn":14},{"ruleId":"740","severity":1,"message":"750","line":4,"column":10,"nodeType":"742","messageId":"743","endLine":4,"endColumn":13},{"ruleId":"740","severity":1,"message":"837","line":4,"column":15,"nodeType":"742","messageId":"743","endLine":4,"endColumn":18},{"ruleId":"740","severity":1,"message":"751","line":4,"column":20,"nodeType":"742","messageId":"743","endLine":4,"endColumn":25},{"ruleId":"740","severity":1,"message":"838","line":4,"column":27,"nodeType":"742","messageId":"743","endLine":4,"endColumn":36},{"ruleId":"740","severity":1,"message":"752","line":4,"column":38,"nodeType":"742","messageId":"743","endLine":4,"endColumn":44},{"ruleId":"740","severity":1,"message":"754","line":4,"column":52,"nodeType":"742","messageId":"743","endLine":4,"endColumn":56},{"ruleId":"740","severity":1,"message":"839","line":8,"column":8,"nodeType":"742","messageId":"743","endLine":8,"endColumn":14},{"ruleId":"740","severity":1,"message":"840","line":9,"column":8,"nodeType":"742","messageId":"743","endLine":9,"endColumn":15},{"ruleId":"740","severity":1,"message":"841","line":10,"column":10,"nodeType":"742","messageId":"743","endLine":10,"endColumn":28},{"ruleId":"740","severity":1,"message":"755","line":11,"column":10,"nodeType":"742","messageId":"743","endLine":11,"endColumn":17},{"ruleId":"740","severity":1,"message":"756","line":12,"column":10,"nodeType":"742","messageId":"743","endLine":12,"endColumn":25},{"ruleId":"740","severity":1,"message":"790","line":13,"column":10,"nodeType":"742","messageId":"743","endLine":13,"endColumn":25},{"ruleId":"740","severity":1,"message":"791","line":13,"column":27,"nodeType":"742","messageId":"743","endLine":13,"endColumn":35},{"ruleId":"740","severity":1,"message":"792","line":13,"column":37,"nodeType":"742","messageId":"743","endLine":13,"endColumn":49},{"ruleId":"740","severity":1,"message":"793","line":14,"column":10,"nodeType":"742","messageId":"743","endLine":14,"endColumn":25},{"ruleId":"740","severity":1,"message":"794","line":14,"column":27,"nodeType":"742","messageId":"743","endLine":14,"endColumn":46},{"ruleId":"740","severity":1,"message":"829","line":15,"column":26,"nodeType":"742","messageId":"743","endLine":15,"endColumn":43},{"ruleId":"740","severity":1,"message":"842","line":18,"column":10,"nodeType":"742","messageId":"743","endLine":18,"endColumn":18},{"ruleId":"740","severity":1,"message":"843","line":19,"column":10,"nodeType":"742","messageId":"743","endLine":19,"endColumn":16},{"ruleId":"740","severity":1,"message":"844","line":20,"column":10,"nodeType":"742","messageId":"743","endLine":20,"endColumn":29},{"ruleId":"740","severity":1,"message":"845","line":21,"column":10,"nodeType":"742","messageId":"743","endLine":21,"endColumn":37},{"ruleId":"740","severity":1,"message":"830","line":26,"column":10,"nodeType":"742","messageId":"743","endLine":26,"endColumn":14},{"ruleId":"740","severity":1,"message":"831","line":27,"column":12,"nodeType":"742","messageId":"743","endLine":27,"endColumn":17},{"ruleId":"740","severity":1,"message":"832","line":28,"column":12,"nodeType":"742","messageId":"743","endLine":28,"endColumn":20},{"ruleId":"740","severity":1,"message":"771","line":28,"column":22,"nodeType":"742","messageId":"743","endLine":28,"endColumn":33},{"ruleId":"740","severity":1,"message":"833","line":29,"column":12,"nodeType":"742","messageId":"743","endLine":29,"endColumn":27},{"ruleId":"740","severity":1,"message":"772","line":29,"column":29,"nodeType":"742","messageId":"743","endLine":29,"endColumn":47},{"ruleId":"740","severity":1,"message":"773","line":30,"column":12,"nodeType":"742","messageId":"743","endLine":30,"endColumn":19},{"ruleId":"740","severity":1,"message":"834","line":30,"column":21,"nodeType":"742","messageId":"743","endLine":30,"endColumn":31},{"ruleId":"740","severity":1,"message":"774","line":36,"column":13,"nodeType":"742","messageId":"743","endLine":36,"endColumn":18},{"ruleId":"740","severity":1,"message":"775","line":36,"column":20,"nodeType":"742","messageId":"743","endLine":36,"endColumn":27},{"ruleId":"740","severity":1,"message":"859","line":45,"column":22,"nodeType":"742","messageId":"743","endLine":45,"endColumn":35},{"ruleId":"740","severity":1,"message":"860","line":45,"column":44,"nodeType":"742","messageId":"743","endLine":45,"endColumn":55},{"ruleId":"740","severity":1,"message":"861","line":45,"column":57,"nodeType":"742","messageId":"743","endLine":45,"endColumn":63},{"ruleId":"902","severity":1,"message":"903","line":12,"column":51,"nodeType":"904","messageId":"905","endLine":12,"endColumn":73,"fix":"906"},{"ruleId":"740","severity":1,"message":"865","line":21,"column":5,"nodeType":"742","messageId":"743","endLine":21,"endColumn":30},{"ruleId":"740","severity":1,"message":"907","line":117,"column":17,"nodeType":"742","messageId":"743","endLine":117,"endColumn":21},{"ruleId":"740","severity":1,"message":"793","line":14,"column":5,"nodeType":"742","messageId":"743","endLine":14,"endColumn":20},{"ruleId":"740","severity":1,"message":"908","line":19,"column":5,"nodeType":"742","messageId":"743","endLine":19,"endColumn":24},{"ruleId":"740","severity":1,"message":"794","line":28,"column":5,"nodeType":"742","messageId":"743","endLine":28,"endColumn":24},{"ruleId":"740","severity":1,"message":"849","line":35,"column":3,"nodeType":"742","messageId":"743","endLine":35,"endColumn":21},{"ruleId":"740","severity":1,"message":"907","line":58,"column":11,"nodeType":"742","messageId":"743","endLine":58,"endColumn":15},{"ruleId":"740","severity":1,"message":"907","line":298,"column":13,"nodeType":"742","messageId":"743","endLine":298,"endColumn":17},{"ruleId":"740","severity":1,"message":"789","line":3,"column":8,"nodeType":"742","messageId":"743","endLine":3,"endColumn":14},{"ruleId":"740","severity":1,"message":"751","line":6,"column":20,"nodeType":"742","messageId":"743","endLine":6,"endColumn":25},{"ruleId":"740","severity":1,"message":"752","line":6,"column":38,"nodeType":"742","messageId":"743","endLine":6,"endColumn":44},{"ruleId":"740","severity":1,"message":"753","line":6,"column":46,"nodeType":"742","messageId":"743","endLine":6,"endColumn":50},{"ruleId":"740","severity":1,"message":"754","line":6,"column":52,"nodeType":"742","messageId":"743","endLine":6,"endColumn":56},{"ruleId":"740","severity":1,"message":"789","line":7,"column":8,"nodeType":"742","messageId":"743","endLine":7,"endColumn":14},{"ruleId":"740","severity":1,"message":"841","line":10,"column":10,"nodeType":"742","messageId":"743","endLine":10,"endColumn":28},{"ruleId":"740","severity":1,"message":"755","line":11,"column":10,"nodeType":"742","messageId":"743","endLine":11,"endColumn":17},{"ruleId":"740","severity":1,"message":"756","line":12,"column":10,"nodeType":"742","messageId":"743","endLine":12,"endColumn":25},{"ruleId":"740","severity":1,"message":"790","line":13,"column":10,"nodeType":"742","messageId":"743","endLine":13,"endColumn":25},{"ruleId":"740","severity":1,"message":"791","line":13,"column":27,"nodeType":"742","messageId":"743","endLine":13,"endColumn":35},{"ruleId":"740","severity":1,"message":"792","line":13,"column":37,"nodeType":"742","messageId":"743","endLine":13,"endColumn":49},{"ruleId":"740","severity":1,"message":"793","line":14,"column":10,"nodeType":"742","messageId":"743","endLine":14,"endColumn":25},{"ruleId":"740","severity":1,"message":"794","line":14,"column":27,"nodeType":"742","messageId":"743","endLine":14,"endColumn":46},{"ruleId":"740","severity":1,"message":"829","line":15,"column":26,"nodeType":"742","messageId":"743","endLine":15,"endColumn":43},{"ruleId":"740","severity":1,"message":"842","line":18,"column":10,"nodeType":"742","messageId":"743","endLine":18,"endColumn":18},{"ruleId":"740","severity":1,"message":"843","line":19,"column":10,"nodeType":"742","messageId":"743","endLine":19,"endColumn":16},{"ruleId":"740","severity":1,"message":"844","line":20,"column":10,"nodeType":"742","messageId":"743","endLine":20,"endColumn":29},{"ruleId":"740","severity":1,"message":"845","line":21,"column":10,"nodeType":"742","messageId":"743","endLine":21,"endColumn":37},{"ruleId":"740","severity":1,"message":"909","line":23,"column":8,"nodeType":"742","messageId":"743","endLine":23,"endColumn":23},{"ruleId":"740","severity":1,"message":"846","line":26,"column":10,"nodeType":"742","messageId":"743","endLine":26,"endColumn":21},{"ruleId":"740","severity":1,"message":"847","line":26,"column":22,"nodeType":"742","messageId":"743","endLine":26,"endColumn":33},{"ruleId":"740","severity":1,"message":"848","line":28,"column":10,"nodeType":"742","messageId":"743","endLine":28,"endColumn":22},{"ruleId":"740","severity":1,"message":"864","line":28,"column":24,"nodeType":"742","messageId":"743","endLine":28,"endColumn":40},{"ruleId":"740","severity":1,"message":"797","line":30,"column":10,"nodeType":"742","messageId":"743","endLine":30,"endColumn":23},{"ruleId":"740","severity":1,"message":"849","line":33,"column":10,"nodeType":"742","messageId":"743","endLine":33,"endColumn":28},{"ruleId":"740","severity":1,"message":"910","line":34,"column":10,"nodeType":"742","messageId":"743","endLine":34,"endColumn":22},{"ruleId":"740","severity":1,"message":"850","line":48,"column":12,"nodeType":"742","messageId":"743","endLine":48,"endColumn":17},{"ruleId":"740","severity":1,"message":"911","line":48,"column":19,"nodeType":"742","messageId":"743","endLine":48,"endColumn":27},{"ruleId":"740","severity":1,"message":"774","line":52,"column":24,"nodeType":"742","messageId":"743","endLine":52,"endColumn":29},{"ruleId":"740","severity":1,"message":"775","line":52,"column":31,"nodeType":"742","messageId":"743","endLine":52,"endColumn":38},{"ruleId":"740","severity":1,"message":"855","line":62,"column":73,"nodeType":"742","messageId":"743","endLine":62,"endColumn":84},{"ruleId":"740","severity":1,"message":"856","line":62,"column":93,"nodeType":"742","messageId":"743","endLine":62,"endColumn":105},{"ruleId":"740","severity":1,"message":"830","line":67,"column":10,"nodeType":"742","messageId":"743","endLine":67,"endColumn":14},{"ruleId":"740","severity":1,"message":"831","line":68,"column":10,"nodeType":"742","messageId":"743","endLine":68,"endColumn":15},{"ruleId":"740","severity":1,"message":"832","line":69,"column":10,"nodeType":"742","messageId":"743","endLine":69,"endColumn":18},{"ruleId":"740","severity":1,"message":"771","line":69,"column":20,"nodeType":"742","messageId":"743","endLine":69,"endColumn":31},{"ruleId":"740","severity":1,"message":"833","line":70,"column":10,"nodeType":"742","messageId":"743","endLine":70,"endColumn":25},{"ruleId":"740","severity":1,"message":"772","line":70,"column":27,"nodeType":"742","messageId":"743","endLine":70,"endColumn":45},{"ruleId":"740","severity":1,"message":"773","line":71,"column":10,"nodeType":"742","messageId":"743","endLine":71,"endColumn":17},{"ruleId":"740","severity":1,"message":"834","line":71,"column":19,"nodeType":"742","messageId":"743","endLine":71,"endColumn":29},{"ruleId":"740","severity":1,"message":"857","line":75,"column":18,"nodeType":"742","messageId":"743","endLine":75,"endColumn":34},{"ruleId":"740","severity":1,"message":"858","line":75,"column":45,"nodeType":"742","messageId":"743","endLine":75,"endColumn":63},{"ruleId":"740","severity":1,"message":"859","line":83,"column":20,"nodeType":"742","messageId":"743","endLine":83,"endColumn":33},{"ruleId":"740","severity":1,"message":"860","line":83,"column":42,"nodeType":"742","messageId":"743","endLine":83,"endColumn":53},{"ruleId":"740","severity":1,"message":"861","line":83,"column":55,"nodeType":"742","messageId":"743","endLine":83,"endColumn":61},"no-native-reassign",["912"],"no-negated-in-lhs",["913"],"no-unused-vars","'SearchBox' is defined but never used.","Identifier","unusedVar","'FaHome' is defined but never used.","'FaGamepad' is defined but never used.","'FaShoppingCart' is defined but never used.","'FaHeart' is defined but never used.","'GiSwordsEmblem' is defined but never used.","'SiTwitch' is defined but never used.","'Row' is defined but never used.","'Image' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'Form' is defined but never used.","'faHeart' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'FaFileInvoice' is defined but never used.","'listProductDetails' is defined but never used.","'createProductReview' is defined but never used.","'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.","'FaComments' is defined but never used.","'Helmet' is defined but never used.","'Link' is defined but never used.","'getUserDetails' is defined but never used.","'deleteOrder' is defined but never used.","'ORDER_DELETE_REQUEST' is defined but never used.","'ORDER_DELETE_SUCCESS' is defined but never used.","'ORDER_DELETE_FAIL' is defined but never used.","'setName' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setConfirmPassword' is assigned a value but never used.","'message' is assigned a value but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'success' is assigned a value but never used.","'submitHandler' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useState' is defined but never used.","'ProductCarousel' is defined but never used.","'ListGroupItem' is defined but never used.","'Rating' is defined but never used.","'getOrderDetails' is defined but never used.","'payOrder' is defined but never used.","'deliverOrder' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'axios' is defined but never used.","'Table' is defined but never used.","'LinkContainer' is defined but never used.","'setQty' is assigned a value but never used.","'rating' is assigned a value but never used.","'comment' is assigned a value but never used.","'wishlist' is assigned a value but never used.","'setWishlist' is assigned a value but never used.","'bought' is assigned a value but never used.","'setBought' is assigned a value but never used.","'owned' is assigned a value but never used.","'setOwned' is assigned a value but never used.","'boughtQty' is assigned a value but never used.","'setBoughtQty' is assigned a value but never used.","'orderId' is assigned a value but never used.","'sdkReady' is assigned a value but never used.","'setSdkReady' is assigned a value but never used.","'loadingPay' is assigned a value but never used.","'successPay' is assigned a value but never used.","'loadingDeliver' is assigned a value but never used.","'successDeliver' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'loadingProductReview' is assigned a value but never used.","'errorProductReview' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order'. Either include it or remove the dependency array.","ArrayExpression",["914"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["915"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["916"],"'deliverHandler' is assigned a value but never used.","'download' is assigned a value but never used.","'updateUserProfile' is defined but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'userError' is assigned a value but never used.","'userLoading' is assigned a value but never used.","'Col' is defined but never used.","'ListGroup' is defined but never used.","'Loader' is defined but never used.","'Message' is defined but never used.","'listProfileDetails' is defined but never used.","'Dropdown' is defined but never used.","'useRef' is defined but never used.","'createProfileReview' is defined but never used.","'PROFILE_CREATE_REVIEW_RESET' is defined but never used.","'updateHeart' is defined but never used.","'deleteHeart' is defined but never used.","'addHeartUser' is defined but never used.","'HEART_UPDATE_RESET' is defined but never used.","'users' is assigned a value but never used.","'heartlist' is assigned a value but never used.","'profileError' is assigned a value but never used.","'profileLoading' is assigned a value but never used.","'profiles' is assigned a value but never used.","'profilePage' is assigned a value but never used.","'profilePages' is assigned a value but never used.","'userDetailsError' is assigned a value but never used.","'userDetailsLoading' is assigned a value but never used.","'loadingOrders' is assigned a value but never used.","'errorOrders' is assigned a value but never used.","'orders' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["917"],"'getUserHeartlist' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'listMyOrders' is defined but never used.","'liked' is assigned a value but never used.","'loadingProfileReview' is assigned a value but never used.","'errorProfileReview' is assigned a value but never used.","'addToCartHandler' is assigned a value but never used.","'addToWishlist' is assigned a value but never used.","'addToPreorder' is assigned a value but never used.","'showPremium' is assigned a value but never used.","'setShowPremium' is assigned a value but never used.","'showDownload' is assigned a value but never used.","'setShowDownload' is assigned a value but never used.","'handleDropdownToggle' is assigned a value but never used.","'addToPlaylist' is assigned a value but never used.","'profileErrorDetails' is assigned a value but never used.","'profileLoadingDetails' is assigned a value but never used.","'heartlistId' is assigned a value but never used.","'hearted' is assigned a value but never used.","'setUserReceiver' is assigned a value but never used.","'setIsHeart' is assigned a value but never used.","'setCanMessage' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","'handleFormSubmit' is assigned a value but never used.","'errorUpdate' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used.","'handleUpdateClick' is assigned a value but never used.","'handleModalSave' is assigned a value but never used.","'deleteHandler' is assigned a value but never used.","'user' is assigned a value but never used.","'listProfile' is defined but never used.","'setIsVerified' is assigned a value but never used.","'ProfileCarousel' is defined but never used.","'uploading' is assigned a value but never used.","'uploadingDownload' is assigned a value but never used.","'uploadFileHandler' is assigned a value but never used.","'uploadDownloadHandler' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property profileTopRated.","MemberExpression","unexpectedWhitespace",{"range":"918","text":"919"},"'data' is assigned a value but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ProfileMessages' is defined but never used.","'listProfiles' is defined but never used.","'setUsers' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"920","fix":"921"},{"desc":"922","fix":"923"},{"desc":"924","fix":"925"},{"desc":"926","fix":"927"},[440,442],".","Update the dependencies array to be: [dispatch, order]",{"range":"928","text":"929"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"930","text":"931"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"932","text":"933"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"934","text":"935"},[3059,3069],"[dispatch, order]",[1432,1470],"[user, userId, successUpdate, history, dispatch]",[2272,2326],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[1239,1257],"[success, history, order._id, dispatch]"]